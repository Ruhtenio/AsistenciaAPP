{"version":3,"file":"src_app_pages_home_home_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;IAOaG,cAAc,SAAdA,cAAc;EA+BzBC,YAAoBC,OAApB,EAAqDC,MAArD,EAAmE;IAA/C;IAAiC;IA5BrD,eAAU,KAAV;IACA,mBACE;;;;;;;;;;;MADF;IAaE,iBACA;;;;;;;;;;;MADA;EAcsE;;EAElEC,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,YAAL;IADY;EAEb;;EAEKA,YAAY;IAAA;;IAAA;MAChB,MAAI,CAACC,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAW,MAAI,CAACC,SAAhB,CAAb;MACA,MAAI,CAACC,OAAL,GAAe,KAAf;MACA,MAAMC,IAAI,SAAS,MAAI,CAACT,OAAL,CAAaU,KAAb,EAAnB;;MACA,IAAID,IAAI,KAAK,IAAb,EAAmB;QACjB;MACD;;MACD,IAAIA,IAAI,KAAK,EAAb,EAAiB;QACf;MACD;;MACD,MAAML,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWG,IAAX,CAAd;;MACA,IAAIL,KAAK,CAACO,YAAN,KAAuBC,SAA3B,EAAsC;QACpC;MACD;;MACD,MAAI,CAACJ,OAAL,GAAe,IAAf;MACA,MAAI,CAACJ,KAAL,GAAaA,KAAb;IAfgB;EAgBjB;;AArDwB;;;;;;;;AAAdN,cAAc,sDAL1BH,wDAAS,CAAC;EACTkB,QAAQ,EAAE,WADD;EAETC,UAAAA,6DAFS;;AAAA,CAAD,CAKiB,GAAdhB,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb;AACA;AACA;IAOamB,cAAc,SAAdA,cAAc;EAiC1BlB,YACUmB,GADV,EAEUC,eAFV,EAE0C;IADhC;IACA,uCAAgC,CA3B1C;IACA;IACA;IACA;;IACA,mBAAmB;MACjBC,MAAM,EAAE,IADS;MAEjBC,EAAE,EAAE,IAFa;MAGjBC,KAAK,EAAE,EAHU;MAIjBC,IAAI,EAAE,EAJW;MAKjBC,IAAI,EAAE;IALW,CAAnB;EAwBC,CApCyB,CAsC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,iBAAiB;IACf,KAAKC,cAAL,GAAsB,IAAtB;IACA,KAAKC,cAAL,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC;IACA,KAAKC,WAAL;IACA,KAAKC,gBAAL;EACD,CAtDyB,CAwD1B;EACA;EACA;;;EAEAC,cAAc,CAACC,MAAD,EAAe;IAC3B,KAAKJ,cAAL,CAAoBI,MAApB,EAA4B,IAA5B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C;EACD,CA9DyB,CAgE1B;EACA;EACA;EACA;;;EAEAC,kBAAkB;IAChB,KAAKL,cAAL,CAAoB,KAAKD,cAAzB,EAAyC,IAAzC,EAA+C,EAA/C,EAAmD,EAAnD,EAAuD,EAAvD;EACD,CAvEyB,CAyE1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,cAAc,CAACP,MAAD,EAASa,KAAT,EAAgBX,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAiC;IAE7C;IAEA,KAAKU,WAAL,CAAiBd,MAAjB,GAA0BA,MAA1B;IACA,KAAKc,WAAL,CAAiBb,EAAjB,GAAsBY,KAAtB;IACA,KAAKC,WAAL,CAAiBZ,KAAjB,GAAyBA,KAAzB;IACA,KAAKY,WAAL,CAAiBX,IAAjB,GAAwBA,IAAxB;IACA,KAAKW,WAAL,CAAiBV,IAAjB,GAAwBA,IAAxB,CAR6C,CAU7C;IACA;;IAEA,MAAMW,GAAG,GAAGf,MAAM,KAAK,IAAX,GAAiB,iBAAjB,GAAqCA,MAAjD;IACA,MAAMgB,GAAG,GAAGH,KAAK,KAAK,IAAV,GAAgB,OAAhB,GAA0BA,KAAtC;IACA,KAAKI,uBAAL,GAA+B,YAAYF,GAAG,aAAaC,GAAG,GAA9D;EACD,CArGyB,CAuG1B;EACA;EACA;EACA;EACA;EACA;;;EAEAR,WAAW;IACT,KAAKV,GAAL,CAASU,WAAT,GAAuBU,SAAvB,CAAiC7B,IAAI,IAAI,KAAK8B,QAAL,GAAgB9B,IAAzD;EACD,CAhHyB,CAkH1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAoB,gBAAgB;IAEd,KAAKX,GAAL,CAASW,gBAAT,GAA4BS,SAA5B,CAAuCE,aAAD,IAAkB;MAEtD;MACA;MACA;MACA;MACA;MACA;MAEA,KAAKtB,GAAL,CAASU,WAAT,GAAuBU,SAAvB,CAAkCC,QAAD,IAAa;QAC5C;QACAC,aAAa,CAACC,OAAd,CAAsBP,WAAW,IAAG;UAClCA,WAAW,CAACV,IAAZ,GAAmBe,QAAQ,CAACG,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACtB,EAAF,KAASa,WAAW,CAACd,MAAxC,EAAgDI,IAAnE;QACD,CAFD,EAF4C,CAK5C;;QACAgB,aAAa,CAACI,OAAd,GAN4C,CAO5C;;QACA,KAAKJ,aAAL,GAAqBA,aAArB;MACD,CATD;IAUD,CAnBD;EAoBD,CAtJyB,CAwJ1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAK,kBAAkB;IAChB,IAAI,KAAKX,WAAL,CAAiBd,MAAjB,KAA4B,IAAhC,EAAsC;MACpC,KAAK0B,cAAL,CAAoB,6DAApB;MACA;IACD;;IACD,IAAI,KAAKZ,WAAL,CAAiBZ,KAAjB,CAAuByB,IAAvB,OAAkC,EAAtC,EAA0C;MACxC,KAAKD,cAAL,CAAoB,uDAApB;MACA;IACD;;IACD,IAAI,KAAKZ,WAAL,CAAiBX,IAAjB,CAAsBwB,IAAtB,OAAiC,EAArC,EAAyC;MACvC,KAAKD,cAAL,CAAoB,uDAApB;MACA;IACD;;IACD,IAAI,KAAKZ,WAAL,CAAiBb,EAAjB,KAAwB,IAA5B,EAAkC;MAChC,KAAK2B,gBAAL;IACD,CAFD,MAGK;MACH,KAAKC,qBAAL;IACD;EACF,CAtLyB,CAwL1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAD,gBAAgB;IACd,KAAK9B,GAAL,CAASgC,iBAAT,CAA2B,KAAKhB,WAAhC,EAA6CI,SAA7C,CACG7B,IAAD,IAAS;MACP,KAAKqC,cAAL,CAAoB,qCAAqCrC,IAAI,CAACY,EAAE,IAAIZ,IAAI,CAACa,KAAK,KAA9E;MACA,KAAKU,kBAAL;MACA,KAAKH,gBAAL;IACD,CALH,EAMGsB,KAAD,IAAW,KAAKC,YAAL,CAAkB,sCAAlB,EAA0DD,KAA1D,CANb;EAQD,CA5MyB,CA8M1B;EACA;EACA;;;EAEAF,qBAAqB;IACnB,KAAK/B,GAAL,CAASmC,iBAAT,CAA2B,KAAKnB,WAAhC,EAA6CI,SAA7C,CACG7B,IAAD,IAAS;MACP,KAAKqC,cAAL,CAAoB,0CAA0CrC,IAAI,CAACY,EAAE,IAAIZ,IAAI,CAACa,KAAK,KAAnF;MACA,KAAKU,kBAAL;MACA,KAAKH,gBAAL;IACD,CALH,EAMGsB,KAAD,IAAW,KAAKC,YAAL,CAAkB,2CAAlB,EAA+DD,KAA/D,CANb;EAQD,CA3NyB,CA6N1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAG,iBAAiB,CAACvB,MAAD,EAAO;IACtB,MAAMwB,GAAG,GAAGxB,MAAZ;IACA,KAAKJ,cAAL,CAAoB4B,GAAG,CAACnC,MAAxB,EAAgCmC,GAAG,CAAClC,EAApC,EAAwCkC,GAAG,CAACjC,KAA5C,EAAmDiC,GAAG,CAAChC,IAAvD,EAA6DgC,GAAG,CAAC/B,IAAjE;IACAgC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,cAArC,CAAoD;MAACC,KAAK,EAAE,KAAR;MAAeC,QAAQ,EAAE;IAAzB,CAApD;EACD,CAlPyB,CAoP1B;EACA;EACA;EACA;EACA;;;EAEAC,mBAAmB,CAAC9B,MAAD,EAAO;IACxB,MAAME,KAAK,GAAGF,MAAM,CAACV,EAArB;IACA,KAAKH,GAAL,CAAS4C,iBAAT,CAA2B7B,KAA3B,EAAkCK,SAAlC,CACG7B,IAAD,IAAS;MACP,KAAKqC,cAAL,CAAoB,wCAAwCb,KAAK,KAAjE;MACA,KAAKD,kBAAL;MACA,KAAKH,gBAAL;IACD,CALH,EAMGsB,KAAD,IAAW,KAAKC,YAAL,CAAkB,yCAAlB,EAA6DD,KAA7D,CANb;EAQD,CApQyB,CAsQ1B;EACA;EACA;EACA;EACA;EACA;;;EAEAY,+BAA+B,CAACC,KAAD,EAAQC,IAAR,EAAY;IACzC,OAAOA,IAAI,CAAC5C,EAAZ;EACD,CA/QyB,CAiR1B;;;EAEMyB,cAAc,CAACoB,OAAD,EAAgB;IAAA;;IAAA;MAClC,MAAMC,KAAK,SAAS,KAAI,CAAChD,eAAL,CAAqBiD,MAArB,CAA4B;QAC9CC,OAAO,EAAEH,OADqC;QAE9CI,QAAQ,EAAE,IAFoC;QAG9CC,KAAK,EAAE;MAHuC,CAA5B,CAApB;MAKAJ,KAAK,CAACK,OAAN;IANkC;EAOnC,CA1RyB,CA4R1B;EACA;EACA;EACA;EACA;;;EAEMpB,YAAY,CAACc,OAAD,EAAUf,KAAV,EAAe;IAAA;;IAAA;MAC/BsB,OAAO,CAACC,GAAR,CAAYR,OAAZ;MACA,MAAMC,KAAK,SAAS,MAAI,CAAChD,eAAL,CAAqBiD,MAArB,CAA4B;QAC9CC,OAAO,EAAEH,OADqC;QAE9CI,QAAQ,EAAE,IAFoC;QAG9CC,KAAK,EAAE;MAHuC,CAA5B,CAApB;MAKAJ,KAAK,CAACK,OAAN;MACA,MAAMrB,KAAN;IAR+B;EAShC;;AA3SyB;;;;;;;;AAAdlC,cAAc,sDAL1BtB,wDAAS,CAAC;EACTkB,QAAQ,EAAE,WADD;EAETC,UAAAA,6DAFS;;AAAA,CAAD,CAKiB,GAAdG,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb;AACA;AACA;IAOa4D,iBAAiB,SAAjBA,iBAAiB;EAE5B9E,YAAoBC,OAApB,EAA2C;IAAvB;EAA4B;;EAE1C8E,eAAe;IAAA;MACnB,OAAO,IAAIC,OAAJ;QAAA,qKAAY,WAAOC,OAAP,EAAkB;UACnC,MAAM;YAAEC;UAAF,UAAoBN,gGAAA,CAA+B;YAAEO,KAAK,EAAE;UAAT,CAA/B,CAA1B;;UACA,IAAI,CAACD,OAAL,EAAc;YACZN,gGAAA;YACAK,OAAO,CAAC,KAAD,CAAP;YACA;UACD;;UACDA,OAAO,CAAC,IAAD,CAAP;QACD,CARM;;QAAA;UAAA;QAAA;MAAA,IAAP;IADmB;EAUpB;;EAEKI,IAAI;IAAA;;IAAA;MACR,MAAMC,OAAO,SAAS,KAAI,CAACP,eAAL,EAAtB;;MACA,IAAIO,OAAJ,EAAa;QACX,MAAMC,GAAG,GAAG9B,QAAQ,CAACjC,IAAT,CAAcgE,KAAd,CAAoBC,UAAhC;QACAhC,QAAQ,CAACjC,IAAT,CAAcgE,KAAd,CAAoBC,UAApB,GAAiC,aAAjC;QACA,MAAM;UAAEC,UAAF;UAAcC;QAAd,UAAgCf,0FAAA,CAAyB;UAAEiB,eAAe,EAAE,CAAChB,yFAAD;QAAnB,CAAzB,CAAtC;QACApB,QAAQ,CAACjC,IAAT,CAAcgE,KAAd,CAAoBC,UAApB,GAAiCF,GAAjC;;QACA,IAAIG,UAAJ,EAAgB;UACd,OAAOC,OAAP;QACD;;QACDI,KAAK,CAAC,sCAAD,CAAL;QACA,OAAO,EAAP;MACD;;MACDA,KAAK,CAAC,iEAAD,CAAL;MACA,OAAO,EAAP;IAdQ;EAeT;;EAEKC,IAAI;IAAA;MACRpB,yFAAA;IADQ;EAET;;AAnC2B;;;;;;AAAjBE,iBAAiB,sDAL7BlF,wDAAS,CAAC;EACTkB,QAAQ,EAAE,eADD;EAETC,UAAAA,iEAFS;;AAAA,CAAD,CAKoB,GAAjB+D,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;ACTqC;AACO;AACgC;IAO5E,gBAAgB,SAAhB,gBAAgB;IAG3B,YACU,WAA2B,EAC3B,MAAc,EACd,eAAgC,EAChC,mBAAwC,EACxC,iBAAoC;QAJpC,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAEhD,mFAAmF;QACnF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,iCAAiC;gBAEtF,iEAAiE;gBACjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;aAE9E;iBAAM;gBACL;;;;kBAIE;gBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACH,CAAC;IAEC,QAAQ,KAAI,CAAC;;;;;;;;;AA5BF,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,yEAAuC;;KAExC,CAAC;GACW,gBAAgB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACc;AACmB;AACA;AACM;AACG;AAC5C;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;QACnB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,0FAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,wFAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,oFAAc;aAC1B;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,oFAAc;aAC1B;SACF;KACF;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;;AAArB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCO;AACM;AACF;AACA;AACN;AAEuB;AACqB;AACH;AACN;AACA;IAkB7D,cAAc,SAAd,cAAc;;AAAd,cAAc;IAf1B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,wDAAW;YACX,uEAAqB;SACtB;QACD,YAAY,EAAE;YACZ,gDAAQ;YACR,0FAAgB;YAChB,wFAAiB;YACjB,oFAAc;YACd,oFAAc;SACf;KACF,CAAC;GACW,cAAc;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5B3B;AACA;AAIA;AACA;AACA;AACA;AAEA;IAOauB,QAAQ,SAARA,QAAQ;EAanBrG,YACUE,MADV,EAEUD,OAFV,EAGUqG,WAHV,EAGqC;IAF3B;IACA;IACA;IAVV,mBAAc,IAAd;IACA,oBAAe,KAAf;IACA,oBAAe,KAAf;IACA,iBAAY,KAAZ;IAEA,yBAAoB,EAApB;IAQE,KAAKA,WAAL,CAAiBC,WAAjB,CAA6BhE,SAA7B,CAAuCiE,MAAM,IAAG;MAC9C,IAAI,KAAKtG,MAAL,CAAYuG,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA9C,EAAqD;QAAE;QAErD;QACA,KAAKC,OAAL,GAAe,KAAK1G,MAAL,CAAYuG,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDC,OAAhD,CAAwDC,MAAvE;MAED,CALD,MAKO;QACL;;;;;QAKA,KAAK3G,MAAL,CAAY4G,QAAZ,CAAqB,CAAC,QAAD,CAArB;MACD;IACF,CAdD;EAkBD;;EAEDC,eAAe;IACb,KAAKC,aAAL,CAAmB,SAAnB;EACD;;EAEDC,gBAAgB;IACd,KAAKC,QAAL,CAAclB,IAAd;EACD;;EAEKgB,aAAa,CAACvF,IAAD,EAAa;IAAA;;IAAA;MAC9B,KAAI,CAAC0F,WAAL,GAAmB1F,IAAI,KAAK,SAA5B;MACA,KAAI,CAAC2F,YAAL,GAAoB3F,IAAI,KAAK,UAA7B;MACA,KAAI,CAAC4F,YAAL,GAAoB5F,IAAI,KAAK,OAA7B;MACA,KAAI,CAAC6F,SAAL,GAAiB7F,IAAI,KAAK,OAA1B;;MAEA,IAAIA,IAAI,KAAK,UAAb,EAAyB;QACvB,MAAMkE,OAAO,SAAS,KAAI,CAACuB,QAAL,CAAc7B,IAAd,EAAtB;QACA,MAAM,KAAI,CAACpF,OAAL,CAAasH,MAAb,CAAoB5B,OAApB,CAAN;QACA,KAAI,CAACyB,YAAL,GAAoB,KAApB;QACA,KAAI,CAACI,iBAAL,GAAyB,OAAzB;QACA,KAAI,CAACH,YAAL,GAAoB,IAApB;;QACA,KAAI,CAACI,QAAL,CAAcrH,YAAd;MACD,CAPD,MAOO;QACL,KAAI,CAAC8G,QAAL,CAAclB,IAAd;MACD;;MACD,IAAGvE,IAAI,KAAK,OAAZ,EAAqB;QACnB,KAAI,CAACiG,KAAL,CAAWhG,iBAAX;MACD;IAlB6B;EAmB/B;;EAEDiG,cAAc,CAAC3F,MAAD,EAAO;IACnB,KAAKgF,aAAL,CAAmBhF,MAAM,CAAC4F,MAAP,CAAcC,KAAjC;EACD;;EAEKC,WAAW;IAAA;;IAAA;MACf,MAAI,CAACZ,QAAL,CAAclB,IAAd;;MACA,MAAI,CAACgB,aAAL,CAAmB,SAAnB;;MACA,MAAI,CAACQ,iBAAL,GAAyB,SAAzB;IAHe;EAIhB;;AA5EkB;;;;;;;;;;;;UAClBtB,oDAASA;IAAA6B,OAAC3B,0FAAD;;;UACTF,oDAASA;IAAA6B,OAACjD,+FAAD;;;UACToB,oDAASA;IAAA6B,OAAChI,oFAAD;;;UACTmG,oDAASA;IAAA6B,OAAC7G,oFAAD;;;AAJCmF,QAAQ,uDALpBzG,wDAAS,CAAC;EACTkB,QAAQ,EAAE,UADD;EAETC,UAAAA,uDAFS;;AAAA,CAAD,CAKW,GAARsF,QAAQ,CAAR;;;;;;;;;;;;;;;;;;;;ACjB8B;AACoB;AAExB;IAK1B,gBAAgB,SAAhB,gBAAgB;IAW3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,6DAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,6BAA6B,EAAE,GAAG;aACnC,CAAC;SACH,CAAC;QAEF,WAAM,GAAG,sCAAsC,CAAC;IAGhD,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,IAAI,CACzD,qDAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,IAAI,CAChD,qDAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,IAAI,CAChD,qDAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,aAAqB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,aAAa,CAAC,CAAC,IAAI,CAChE,qDAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,WAAgB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAChF,qDAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,WAAgB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,WAAW,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;aAC1F,IAAI,CAAC,qDAAK,CAAC,CAAC,CAAC,CACf,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,aAAqB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACrF,qDAAK,CAAC,CAAC,CAAC,CACT,CAAC;IACJ,CAAC;;;;;AAtDU,gBAAgB;IAH5B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB;AAAA;;;;;;;;;;;;;;;;ACRtB,IAAIxB,eAAJ;;AACP,CAAC,UAAUA,eAAV,EAA2B;EACxB;;EACA;AACJ;AACA;EACIA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;EACAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,mBAAD,CAAf,GAAuC,mBAAvC;EACAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;EACAA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B,CAZwB,CAaxB;EACA;;EACAA,eAAe,CAAC,SAAD,CAAf,GAA6B,SAA7B;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,gBAAD,CAAf,GAAoC,gBAApC;EACAA,eAAe,CAAC,SAAD,CAAf,GAA6B,SAA7B;EACAA,eAAe,CAAC,UAAD,CAAf,GAA8B,UAA9B;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,SAAD,CAAf,GAA6B,SAA7B;EACAA,eAAe,CAAC,KAAD,CAAf,GAAyB,KAAzB;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B,CA9BwB,CA+BxB;EACA;;EACAA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;EACAA,eAAe,CAAC,aAAD,CAAf,GAAiC,aAAjC;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,UAAD,CAAf,GAA8B,UAA9B;EACAA,eAAe,CAAC,SAAD,CAAf,GAA6B,SAA7B;EACAA,eAAe,CAAC,SAAD,CAAf,GAA6B,SAA7B;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,QAAD,CAAf,GAA4B,QAA5B;EACA;AACJ;AACA;;EACIA,eAAe,CAAC,cAAD,CAAf,GAAkC,cAAlC,CAhDwB,CAiDxB;AACH,CAlDD,EAkDGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAlDlB;;AAmDO,IAAImD,eAAJ;;AACP,CAAC,UAAUA,eAAV,EAA2B;EACxBA,eAAe,CAAC,OAAD,CAAf,GAA2B,OAA3B;EACAA,eAAe,CAAC,MAAD,CAAf,GAA0B,MAA1B;AACH,CAHD,EAGGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CAHlB;;;;;;;;;;;;;;;;;;ACrDA;AACA,MAAMpD,cAAc,GAAGqD,+DAAc,CAAC,gBAAD,EAAmB;EACpDC,GAAG,EAAE,MAAM,iLAAgBC,IAAhB,CAAqBC,CAAC,IAAI,IAAIA,CAAC,CAACC,iBAAN,EAA1B;AADyC,CAAnB,CAArC;AAGA;;;;;;;;;;;;;;;;ACJA;AACO,SAASE,KAAT,CAAeC,KAAK,GAAG,CAAC,CAAxB,EAA2B;EAC9B,OAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBH,KAAlB,EAAyBC,MAAzB,CAAZ,CAAnB;AACH;;AACD,MAAME,aAAN,CAAoB;EAChB3I,WAAW,CAACwI,KAAD,EAAQC,MAAR,EAAgB;IACvB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDG,IAAI,CAACC,UAAD,EAAaJ,MAAb,EAAqB;IACrB,OAAOA,MAAM,CAAClG,SAAP,CAAiB,IAAIuG,eAAJ,CAAoBD,UAApB,EAAgC,KAAKL,KAArC,EAA4C,KAAKC,MAAjD,CAAjB,CAAP;EACH;;AAPe;;AASpB,MAAMK,eAAN,SAA8BR,mDAA9B,CAAyC;EACrCtI,WAAW,CAAC+I,WAAD,EAAcP,KAAd,EAAqBC,MAArB,EAA6B;IACpC,MAAMM,WAAN;IACA,KAAKP,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDrF,KAAK,CAAC4F,GAAD,EAAM;IACP,IAAI,CAAC,KAAKC,SAAV,EAAqB;MACjB,MAAM;QAAER,MAAF;QAAUD;MAAV,IAAoB,IAA1B;;MACA,IAAIA,KAAK,KAAK,CAAd,EAAiB;QACb,OAAO,MAAMpF,KAAN,CAAY4F,GAAZ,CAAP;MACH,CAFD,MAGK,IAAIR,KAAK,GAAG,CAAC,CAAb,EAAgB;QACjB,KAAKA,KAAL,GAAaA,KAAK,GAAG,CAArB;MACH;;MACDC,MAAM,CAAClG,SAAP,CAAiB,KAAK2G,sBAAL,EAAjB;IACH;EACJ;;AAjBoC","sources":["./src/app/components/clase/clase.component.ts","./src/app/components/forum/forum.component.ts","./src/app/components/qr-reader/qr-reader.component.ts","./src/app/components/welcome/welcome.component.ts","./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.ts","./src/app/services/apiclient.service.ts","./node_modules/@capacitor-community/barcode-scanner/dist/esm/definitions.js","./node_modules/@capacitor-community/barcode-scanner/dist/esm/index.js","./node_modules/rxjs/_esm2015/internal/operators/retry.js"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-clase',\n  templateUrl: './clase.component.html',\n  styleUrls: ['./clase.component.scss'],\n})\nexport class ClaseComponent implements OnInit {\n\n  clase: any;\n  hasData = false;\n  jsonExample =\n    `{\n      \"bloqueInicio\": \"\",\n      \"bloqueTermino\": \"\",\n      \"dia\": \"\",\n      \"horaFin\": \"\",\n      \"horaInicio\": \"\",\n      \"idAsignatura\": \"\",\n      \"nombreAsignatura\": \"\",\n      \"nombreProfesor\": \"\",\n      \"seccion\": \"\",\n      \"sede\":\"\"\n    }`;\n    jsonEmpty =\n    `{\n      \"bloqueInicio\": \"\",\n      \"bloqueTermino\": \"\",\n      \"dia\": \"\",\n      \"horaFin\": \"\",\n      \"horaInicio\": \"\",\n      \"idAsignatura\": \"\",\n      \"nombreAsignatura\": \"\",\n      \"nombreProfesor\": \"\",\n      \"seccion\": \"\",\n      \"sede\":\"\"\n    }`;\n\n  constructor(private storage: StorageService, private router: Router) { }\n\n  async ngOnInit() {\n    this.showDinoData();\n  }\n\n  async showDinoData() {\n    this.clase = JSON.parse(this.jsonEmpty);\n    this.hasData = false;\n    const data = await this.storage.getQR();\n    if (data === null) {\n      return;\n    }\n    if (data === '') {\n      return;\n    }\n    const clase = JSON.parse(data);\n    if (clase.idAsignatura === undefined) {\n      return;\n    }\n    this.hasData = true;\n    this.clase = clase;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { APIClientService } from 'src/app/services/apiclient.service';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.scss'],\n})\nexport class ForumComponent {\n // Esta propiedad se liga por ngModel con el \"ion-select\" que muestra los usuarios \"Publicadores\".\n selectedUserId: number;\n\n // Esta propiedad se usa para mostrar por medio de *ngFor=\"let u of usuarios\", todos los\n // usuarios que se despliegan en la lista de usuarios \"Publicadores\" de \"ion-select\".\n usuarios: any;\n\n // Esta propiedad se usa para mantener los datos de la nueva publicación o de la\n // edición de una publicación ya existente. Para ello la propiedad se liga usando\n // ngModel con las cajas de texto de: Título y Cuerpo, junto con respaldar los datos\n // de: Id de publicación, Id del usuario que hizo la publicación y su nombre.\n publicacion: any = {\n   userId: null,\n   id: null,\n   title: '',\n   body: '',\n   name: ''\n };\n\n // Esta propiedad se usa para mantener el listado de \"Publicaciones recientes\". El listado\n // se mantiene siempre actualizado en la página, ya que el \"ion-list\" matiene todos\n // \"ion-item\" con los datos de la interpolación de los campos. Los registros de las\n // publicaciones son actualizados por medio de la directiva *ngFor=\"let p of publicaciones\".\n publicaciones: any;\n\n // La siguiente es una propiedad auxiliar, que se usa nada más que para que el programador\n // pueda ver mientras programa, que cuál es el Id de usuario y Id de publicación que\n // se está ingresando o editando en las cajas de texto de: Título y Cuerpo.\n // Una vez que el programa funcione correctamente, el programador puede eliminar y\n // ocultar estos datos.\n publicacionSeleccionada: string;\n\n constructor(\n   private api: APIClientService,\n   private toastController: ToastController) {\n }\n\n // El siguiente es uno de los eventos del ciclo de vida de las páginas en Ionic/Angular.\n // Se trata del evento \"ionViewWillEnter\" que ocurre justo cuando se va a entrar a la\n // página, pero antes de mostrarla. De esta forma se aprovecha este evento para\n // hacer lo siguiente:\n // 1. Dejar la página sin un \"Publicador\" seleccionado, pues es el usuario quién lo debe\n // seleccionar con el control gráfico de \"ion-select\".\n // 2. Limpiar por completo las propiedades y cajas de texto que permiten el ingreso o\n // edición de una publicación.\n // 3. Cargar el \"ion-select\" con los usuarios para que se pueda escoger un \"Publicador\".\n // 4. Cargar la lista de \"Publicaciones recientes\".\n\n startApiComponent() {\n   this.selectedUserId = null;\n   this.setPublicacion(null, null, '', '', '');\n   this.getUsuarios();\n   this.getPublicaciones();\n }\n\n // Este método se ejecuta cada vez que el usuario cambia el nombre del \"Publicador\",\n // en el control gráfico de \"ion-select\", de modo de mantener sincronizadas las\n // nuevas publicaciones con el \"Publicador\" seleccionado.\n\n cambiarUsuario($event: number) {\n   this.setPublicacion($event, null, '', '', '');\n }\n\n // El siguiente método limpia las cajas de texto de edición de la Publicación.\n // Pero se debe tener en cuenta de que el campo de control \"this.publicacion.userId\",\n // no se limpia con un nulo, sino que toma siempre el valor del userId que corresponde\n // al nombre del usuario seleccionado como \"Publicador\".\n\n limpiarPublicacion() {\n   this.setPublicacion(this.selectedUserId, null, '', '', '');\n }\n\n // El siguiente método sirve para configurar (o asignar) los valores de las\n // cajas de texto para agregar o modificar una Publicación. La propiedad\n // \"this.publicacion\" se despliega como interpolación en las cajas de Título y Cuerpo.\n // El método en su segunda parte muestra los datos de la publicación que no se ven,\n // estos son: el id del usuario y el id de la publicación. Estos datos no se deben\n // mostrar porque sólo son datos de control, sin embargo como estamos depurando la\n // aplicación los mostraremos en color verde. Si el parámetro userId viene en null\n // es porque el usuario no ha seleccionado su nombre en el campo \"Publicador\".\n // Por otro lado si el parámetro pubId viene en null es porque se trata de una\n // nueva publicación, mientras que si tiene un valor, es porque el usuario seleccionó\n // una publicación con el botón de lápiz en el listado de \"Publicaciones recientes\".\n\n setPublicacion(userId, pubId, title, body, name) {\n\n   // Establecer los datos de la publicación\n\n   this.publicacion.userId = userId;\n   this.publicacion.id = pubId;\n   this.publicacion.title = title;\n   this.publicacion.body = body;\n   this.publicacion.name = name;\n\n   // mostrar los datos de control, que sirven para saber si se trata de una\n   // nueva pubicación o de una ya existente que se está editando actualmente.\n\n   const uid = userId === null? 'no seleccionado' : userId;\n   const pid = pubId === null? 'nueva' : pubId;\n   this.publicacionSeleccionada = `(userId: ${uid} - pubId: ${pid})`;\n }\n\n // El siguiente método se subscribe a la Promesa que entrega nuestra Api Cliente\n // mediante el método \"this.api.getUsuarios()\" de modo que una vez que haya\n // recibidos los usuario, le asigna esta lista a la propiedad \"this.usuarios\"\n // que está ligada por ngModel con la propiedad \"this.selectedUserId\" y que\n // llena el \"ion-select\" con todos los usuarios usando la directiva\n // *ngFor=\"let u of usuarios\" en cada uno de los \"ion-select-option\" de la lista.\n\n getUsuarios() {\n   this.api.getUsuarios().subscribe(data => this.usuarios = data);\n }\n\n // El siguiente método llena la lista de \"Publicaciones recientes\".\n // Para llenar todos los ítem de la lista de \"Publicaciones recientes\",\n // hay que subscribirse a la Promesa que entrega nuestra Api Cliente\n // mediante el método \"this.api.getPublicaciones()\". Si la lista es\n // obtenida correctamente, entonces, el programa se subscribe a una\n // nueva Promesa que entrega nuestra Api Cliente mediante el método\n // \"this.api.getUsuarios()\" de modo que una vez recibidos los usuarios\n // el programa recorre con un forEach todas las publicaciones para\n // llenarles el nombre del usuario que realizó la publicación. Como\n // la lista de Publicaciones viene con los registros desde el más\n // antiguo al más nuevo, lo que se hace es usar el método\n // \"publicaciones.reverse()\" que invierte el orden de más reciente\n // a más antiguo.\n\n getPublicaciones() {\n\n   this.api.getPublicaciones().subscribe((publicaciones) => {\n\n     // Las siguientes líneas son para llenar los nombres de los usuarios\n     // que realizaron las publicaciones, puesto que en los registros de\n     // las \"Publicaciones recientes\" sólo viene el \"ID de Usuario\", pero\n     // no su nombre. Para obtener todos los nombres de todos los usuarios,\n     // hay que subscribirse a la Promesa que entrega nuestra Api Cliente\n     // mediante el método \"this.api.getUsuarios()\"\n\n     this.api.getUsuarios().subscribe((usuarios) => {\n       // Recorrer las publicaciones para actualizar el nombre del usuario\n       publicaciones.forEach(publicacion => {\n         publicacion.name = usuarios.find(u => u.id === publicacion.userId).name;\n       });\n       // Invertir la lista de publicaciones para que muestre desde la más nueva a la más antigua\n       publicaciones.reverse();\n       // Actualizar lista de publicaciones\n       this.publicaciones = publicaciones;\n     });\n   });\n }\n\n // Este método permite guardar las publicaciones que se mostrarán en la lista de\n // \"Publicaciones recientes\". El método primero verifica que se haya seleccionado: un\n // Usuario Publicador, el Título y el Cuerpo de la Publicación.\n // El programa verifica si la propiedad \"this.publicacion.id\" es null, en cuyo caso\n // se trata de una publicación nueva, pero en caso de que tenga valor se trata\n // de la edición de una Publicación ya existente. El valor de \"this.publicacion.id\"\n // se usa como dato de control para saber si hay que crear o actualizar. Cada vez\n // que un susuario presiona el botón de lápiz para editar una publicación, se llena el\n // valor de \"this.publicacion.id\" con número de publicación correspondiente al\n // item seleccionado en la lista.\n\n guardarPublicacion() {\n   if (this.publicacion.userId === null) {\n     this.mostrarMensaje('Antes de hacer una publicación debe seleccionar un usuario.');\n     return;\n   }\n   if (this.publicacion.title.trim() === '') {\n     this.mostrarMensaje('Antes de hacer una publicación debe llenar el título.');\n     return;\n   }\n   if (this.publicacion.body.trim() === '') {\n     this.mostrarMensaje('Antes de hacer una publicación debe llenar el cuerpo.');\n     return;\n   }\n   if (this.publicacion.id === null) {\n     this.crearPublicacion();\n   }\n   else {\n     this.actualizarPublicacion();\n   }\n }\n\n // Es importante entender que el sitio web JSON Place holder no puede insertar\n // nuevas publicaciones de los programadores que usan su api para hacer pruebas.\n // Esto es muy lógico, pues de lo contrario todos los programadores que usaran\n // sus apis saturarían de registros sus servidores. No obstante, como indica la\n // documentación de JSON Place holder, ellos devolverán los mismos datos que\n // uno les mandó para hacer el \"create\", pero con el id \"101\". Para demostrar\n // que el registro fue creado, mostraremos un mensaje emergente de ToastController.\n // Para crear una nueva publicación hay que subscribirse a la Promesa que entrega\n // nuestra Api Cliente mediante el método \"this.api.createPublicacion()\"\n // enviándole los datos por medio de la propiedad \"this.publicacion\"\n\n crearPublicacion() {\n   this.api.createPublicacion(this.publicacion).subscribe(\n     (data) => {\n       this.mostrarMensaje(`PUBLICACION CREADA CORRECTAMENTE: ${data.id} ${data.title}...`);\n       this.limpiarPublicacion();\n       this.getPublicaciones();\n     },\n     (error) => this.mostrarError('NO FUE POSIBLE CREAR LA PUBLICACION.', error)\n   );\n }\n\n // Para actualizar una publicación hay que subscribirse a la Promesa que entrega\n // nuestra Api Cliente mediante el método \"this.api.updatePublicacion()\"\n // enviándole los datos por medio de la propiedad \"this.publicacion\"\n\n actualizarPublicacion() {\n   this.api.updatePublicacion(this.publicacion).subscribe(\n     (data) => {\n       this.mostrarMensaje(`PUBLICACION ACTUALIZADA CORRECTAMENTE: ${data.id} ${data.title}...`);\n       this.limpiarPublicacion();\n       this.getPublicaciones();\n     },\n     (error) => this.mostrarError('NO FUE POSIBLE ACTUALIZAR LA PUBLICACION.', error)\n   );\n }\n\n // Este método se usa para transferir los datos de una Publicación desde la lista\n // de \"Publicaciones recientes\", hacia las cajas de texto de Título y Cuerpo, donde\n // se pueden modificar ambos datos, para luego poder actualizarlos presionando el\n // botón de Guardar. El método se activa cuando el usuario hace clic en el botón de\n // lápiz que se encuentra a la derecha de cada publicación en la lista implementada\n // con el control gráfico \"ion-list\". Nótese que al lado de cada ítem hay un botón de\n // lápiz para editar y otro de tarro de basura para eliminar una publicación.\n // Resulta muy importante comprender que para poder modificar una publicación ya\n // existente, se debe guardar el Id del usuario y el Id de la publicación (su número),\n // ya que sólo de esta forma el programa se puede dar cuenta de cuál publicación es la\n // que hay que actualizar. El Id de usuario se almacena en la propiedad\n // \"this.publicacion.userId\" y se actualiza cada vez que el usuario decide cambiar\n // su nombre de \"Publicador\" en el \"ion-select\" (combobox de usuarios). Cuando\n // un usuario cambia de \"Publicador\" en el combobox se activa el evento\n // \"cambiarUsuario($event: number)\" que recibe el Id del usuario seleccionado\n // por medio del parámetro $event.\n\n editarPublicacion($event){\n   const pub = $event;\n   this.setPublicacion(pub.userId, pub.id, pub.title, pub.body, pub.name);\n   document.getElementById('topOfPage').scrollIntoView({block: 'end', behavior: 'smooth'});\n }\n\n // Este método sirve para eliminar una publicación de la lista. Para poder identificar\n // la publicación que ha seleccionado el usuario se le envía el objeto completo\n // con todos los datos de la publicación. Lo anterior se consigue programando el evento\n // (click)=\"editarPublicacion(p)\" donde p es la publicación que se va mostrando una\n // por una gracias al comando *ngFor=\"let p of publicaciones;\" usando en el tag \"ion-item\"\n\n eliminarPublicacion($event){\n   const pubId = $event.id;\n   this.api.deletePublicacion(pubId).subscribe(\n     (data) => {\n       this.mostrarMensaje(`PUBLICACION ELIMINADA CORRECTAMENTE: ${pubId}...`);\n       this.limpiarPublicacion();\n       this.getPublicaciones();\n     },\n     (error) => this.mostrarError('NO FUE POSIBLE ELIMINAR LA PUBLICACION.', error)\n   );\n }\n\n // Este método ayuda a Angular a resolver más rápidamente la necesidad\n // refrescar las listas de datos cuando son muy grandes, ya que es el\n // propio programador quién le indica a Angular cuál es el identificador\n // único del ítem. En este caso la lista está compuesta por publicaciones,\n // donde el identificador único de cada publicación es la propiedad \"id\"\n // (es el campo que aparece en la lista como \"Publicación #nnn\").\n\n getIdentificadorItemPublicacion(index, item) {\n   return item.id;\n }\n\n // El siguiente método sirve para mostrar un mensaje informativo al usuario\n\n async mostrarMensaje(mensaje: string) {\n   const toast = await this.toastController.create({\n     message: mensaje,\n     duration: 3000,\n     color: 'success'\n   });\n   toast.present();\n }\n\n // El siguiente método se encarga de mostrar un mensaje de error en\n // caso de que algún método lo haya informado en los scripts de\n // \"error\" o \"catch\". Esta función no sólo muestra un mensaje al usuario\n // sino que también arroja el mismo error a la consola del browser,\n // para que el programador pueda encontrar rápidamente el problema\n\n async mostrarError(mensaje, error) {\n   console.log(mensaje);\n   const toast = await this.toastController.create({\n     message: mensaje,\n     duration: 3000,\n     color: 'danger'\n   });\n   toast.present();\n   throw error;\n }\n\n}\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BarcodeScanner, SupportedFormat } from '@capacitor-community/barcode-scanner';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-qr-reader',\n  templateUrl: './qr-reader.component.html',\n  styleUrls: ['./qr-reader.component.scss'],\n})\nexport class QrReaderComponent {\n\n  constructor(private storage: StorageService) { }\n\n  async checkPermission() {\n    return new Promise(async (resolve) => {\n      const { granted } = await BarcodeScanner.checkPermission({ force: true });\n      if (!granted) {\n        BarcodeScanner.openAppSettings();\n        resolve(false);\n        return;\n      }\n      resolve(true);\n    });\n  }\n\n  async scan() {\n    const allowed = await this.checkPermission();\n    if (allowed) {\n      const aux = document.body.style.background;\n      document.body.style.background = 'transparent';\n      const { hasContent, content } = await BarcodeScanner.startScan({ targetedFormats: [SupportedFormat.QR_CODE] });\n      document.body.style.background = aux;\n      if (hasContent) {\n        return content;\n      }\n      alert('No fue posible detectar un código QR');\n      return '';\n    }\n    alert('Para escanear un código QR debe otorgar permisos para la cámara');\n    return '';\n  }\n\n  async stop() {\n    BarcodeScanner.stopScan();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, AnimationController, LoadingController } from '@ionic/angular';\nimport { Usuario } from 'src/app/model/Usuario';\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss'],\n})\nexport class WelcomeComponent implements OnInit {\n  public usuario: Usuario;\n  public nombre: '';\n  constructor(\n    private activeroute: ActivatedRoute\n  , private router: Router\n  , private alertController: AlertController\n  , private animationController: AnimationController\n  , private loadingController: LoadingController) {\n\n// Se llama a la ruta activa y se obtienen sus parámetros mediante una subscripcion\nthis.activeroute.queryParams.subscribe(params => {       // Utilizamos expresión lambda\n  if (this.router.getCurrentNavigation().extras.state) { // Validar que tenga datos extras\n\n    // Si tiene datos extra, se rescatan y se asignan a una propiedad\n    this.nombre = this.router.getCurrentNavigation().extras.state.usuario.nombre;\n\n  } else {\n    /*\n      Si no vienen datos extra desde la página anterior, quiere decir que el usuario\n      intentó entrar directamente a la página home sin pasar por el login,\n      de modo que el sistema debe enviarlo al login para que inicie sesión.\n    */\n    this.router.navigate(['/login']);\n  }\n});\n}\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClaseComponent } from 'src/app/components/clase/clase.component';\nimport { ForumComponent } from 'src/app/components/forum/forum.component';\nimport { WelcomeComponent } from 'src/app/components/welcome/welcome.component';\nimport { QrReaderComponent } from '../../components/qr-reader/qr-reader.component';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    children: [\n      {\n        path: 'welcome',\n        component: WelcomeComponent\n      },\n      {\n        path: 'qrreader',\n        component: QrReaderComponent\n      },\n      {\n        path: 'clase',\n        component: ClaseComponent\n      },\n      {\n        path: 'forum',\n        component: ForumComponent\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { QrReaderComponent } from '../../components/qr-reader/qr-reader.component';\nimport { WelcomeComponent } from 'src/app/components/welcome/welcome.component';\nimport { ClaseComponent } from 'src/app/components/clase/clase.component';\nimport { ForumComponent } from 'src/app/components/forum/forum.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n  ],\n  declarations: [\n    HomePage,\n    WelcomeComponent,\n    QrReaderComponent,\n    ClaseComponent,\n    ForumComponent\n  ]\n})\nexport class HomePageModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BarcodeScanner } from '@capacitor-community/barcode-scanner';\nimport { Browser } from '@capacitor/browser';\nimport { ViewDidEnter, ViewWillLeave } from '@ionic/angular';\nimport { ClaseComponent } from 'src/app/components/clase/clase.component';\nimport { ForumComponent } from 'src/app/components/forum/forum.component';\nimport { QrReaderComponent } from 'src/app/components/qr-reader/qr-reader.component';\nimport { WelcomeComponent } from 'src/app/components/welcome/welcome.component';\nimport { Usuario } from 'src/app/model/Usuario';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements ViewDidEnter, ViewWillLeave {\n  @ViewChild(WelcomeComponent) welcome: WelcomeComponent;\n  @ViewChild(QrReaderComponent) qrreader: QrReaderComponent;\n  @ViewChild(ClaseComponent) dinosaur: ClaseComponent;\n  @ViewChild(ForumComponent) forum: ForumComponent;\n\n  showwelcome = true;\n  showqrreader = false;\n  showdinosaur = false;\n  showforum = false;\n  public usuario: Usuario; \n  selectedComponent = '';\n\n  constructor(\n    private router: Router,\n    private storage: StorageService,\n    private activeroute: ActivatedRoute)\n  {\n\n    this.activeroute.queryParams.subscribe(params => {       // Utilizamos expresión lambda\n      if (this.router.getCurrentNavigation().extras.state) { // Validar que tenga datos extras\n    \n        // Si tiene datos extra, se rescatan y se asignan a una propiedad\n        this.usuario = this.router.getCurrentNavigation().extras.state.usuario.nombre;\n    \n      } else {\n        /*\n          Si no vienen datos extra desde la página anterior, quiere decir que el usuario\n          intentó entrar directamente a la página home sin pasar por el login,\n          de modo que el sistema debe enviarlo al login para que inicie sesión.\n        */\n        this.router.navigate(['/login']);\n      }\n    });\n\n\n\n  }\n\n  ionViewDidEnter(): void {\n    this.showComponent('welcome');\n  }\n\n  ionViewWillLeave(): void {\n    this.qrreader.stop();\n  }\n\n  async showComponent(name: string) {\n    this.showwelcome = name === 'welcome';\n    this.showqrreader = name === 'qrreader';\n    this.showdinosaur = name === 'clase';\n    this.showforum = name === 'forum';\n\n    if (name === 'qrreader') {\n      const content = await this.qrreader.scan();\n      await this.storage.saveQR(content);\n      this.showqrreader = false;\n      this.selectedComponent = 'clase';\n      this.showdinosaur = true;\n      this.dinosaur.showDinoData();\n    } else {\n      this.qrreader.stop();\n    }\n    if(name === 'forum') {\n      this.forum.startApiComponent();\n    }\n  }\n\n  segmentChanged($event) {\n    this.showComponent($event.detail.value);\n  }\n\n  async stopScanner() {\n    this.qrreader.stop();\n    this.showComponent('welcome');\n    this.selectedComponent = 'welcome';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIClientService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'content-type': 'application/json',\n      'access-control-allow-origin': '*'\n    })\n  };\n\n  apiUrl = 'https://jsonplaceholder.typicode.com';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUsuario(userId: number): Observable<any> {\n    return this.http.get(this.apiUrl + '/users/' + userId).pipe(\n      retry(3)\n    );\n  }\n\n  getUsuarios(): Observable<any> {\n    return this.http.get(this.apiUrl + '/users/').pipe(\n      retry(3)\n    );\n  }\n\n  getPublicaciones(): Observable<any> {\n    return this.http.get(this.apiUrl + '/posts/').pipe(\n      retry(3)\n    );\n  }\n\n  getPublicacion(idPublicacion: number): Observable<any> {\n    return this.http.get(this.apiUrl + '/posts/' + idPublicacion).pipe(\n      retry(3)\n    );\n  }\n\n  createPublicacion(publicacion: any): Observable<any> {\n    return this.http.post(this.apiUrl + '/posts/', publicacion, this.httpOptions).pipe(\n      retry(3)\n    );\n  }\n\n  updatePublicacion(publicacion: any): Observable<any> {\n    return this.http.put(this.apiUrl + '/posts/' + publicacion.id, publicacion, this.httpOptions)\n      .pipe(retry(3)\n    );\n  }\n\n  deletePublicacion(publicacionId: number): Observable<any> {\n    return this.http.delete(this.apiUrl + '/posts/' + publicacionId, this.httpOptions).pipe(\n      retry(3)\n    );\n  }\n\n}\n","export var SupportedFormat;\n(function (SupportedFormat) {\n    // BEGIN 1D Product\n    /**\n     * Android only, UPC_A is part of EAN_13 according to Apple docs\n     */\n    SupportedFormat[\"UPC_A\"] = \"UPC_A\";\n    SupportedFormat[\"UPC_E\"] = \"UPC_E\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"UPC_EAN_EXTENSION\"] = \"UPC_EAN_EXTENSION\";\n    SupportedFormat[\"EAN_8\"] = \"EAN_8\";\n    SupportedFormat[\"EAN_13\"] = \"EAN_13\";\n    // END 1D Product\n    // BEGIN 1D Industrial\n    SupportedFormat[\"CODE_39\"] = \"CODE_39\";\n    /**\n     * iOS only\n     */\n    SupportedFormat[\"CODE_39_MOD_43\"] = \"CODE_39_MOD_43\";\n    SupportedFormat[\"CODE_93\"] = \"CODE_93\";\n    SupportedFormat[\"CODE_128\"] = \"CODE_128\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"CODABAR\"] = \"CODABAR\";\n    SupportedFormat[\"ITF\"] = \"ITF\";\n    /**\n     * iOS only\n     */\n    SupportedFormat[\"ITF_14\"] = \"ITF_14\";\n    // END 1D Industrial\n    // BEGIN 2D\n    SupportedFormat[\"AZTEC\"] = \"AZTEC\";\n    SupportedFormat[\"DATA_MATRIX\"] = \"DATA_MATRIX\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"MAXICODE\"] = \"MAXICODE\";\n    SupportedFormat[\"PDF_417\"] = \"PDF_417\";\n    SupportedFormat[\"QR_CODE\"] = \"QR_CODE\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"RSS_14\"] = \"RSS_14\";\n    /**\n     * Android only\n     */\n    SupportedFormat[\"RSS_EXPANDED\"] = \"RSS_EXPANDED\";\n    // END 2D\n})(SupportedFormat || (SupportedFormat = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"FRONT\"] = \"front\";\n    CameraDirection[\"BACK\"] = \"back\";\n})(CameraDirection || (CameraDirection = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst BarcodeScanner = registerPlugin('BarcodeScanner', {\n    web: () => import('./web').then(m => new m.BarcodeScannerWeb()),\n});\nexport * from './definitions';\nexport { BarcodeScanner };\n","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n"],"names":["Component","Router","StorageService","ClaseComponent","constructor","storage","router","ngOnInit","showDinoData","clase","JSON","parse","jsonEmpty","hasData","data","getQR","idAsignatura","undefined","selector","template","ToastController","APIClientService","ForumComponent","api","toastController","userId","id","title","body","name","startApiComponent","selectedUserId","setPublicacion","getUsuarios","getPublicaciones","cambiarUsuario","$event","limpiarPublicacion","pubId","publicacion","uid","pid","publicacionSeleccionada","subscribe","usuarios","publicaciones","forEach","find","u","reverse","guardarPublicacion","mostrarMensaje","trim","crearPublicacion","actualizarPublicacion","createPublicacion","error","mostrarError","updatePublicacion","editarPublicacion","pub","document","getElementById","scrollIntoView","block","behavior","eliminarPublicacion","deletePublicacion","getIdentificadorItemPublicacion","index","item","mensaje","toast","create","message","duration","color","present","console","log","BarcodeScanner","SupportedFormat","QrReaderComponent","checkPermission","Promise","resolve","granted","force","openAppSettings","scan","allowed","aux","style","background","hasContent","content","startScan","targetedFormats","QR_CODE","alert","stop","stopScan","ViewChild","ActivatedRoute","WelcomeComponent","HomePage","activeroute","queryParams","params","getCurrentNavigation","extras","state","usuario","nombre","navigate","ionViewDidEnter","showComponent","ionViewWillLeave","qrreader","showwelcome","showqrreader","showdinosaur","showforum","saveQR","selectedComponent","dinosaur","forum","segmentChanged","detail","value","stopScanner","args","CameraDirection","registerPlugin","web","then","m","BarcodeScannerWeb","Subscriber","retry","count","source","lift","RetryOperator","call","subscriber","RetrySubscriber","destination","err","isStopped","_unsubscribeAndRecycle"],"sourceRoot":"webpack:///","x_google_ignoreList":[8,9,10]}