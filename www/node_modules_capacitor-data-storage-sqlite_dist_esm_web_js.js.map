{"version":3,"file":"node_modules_capacitor-data-storage-sqlite_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/capacitor-data-storage-sqlite/dist/esm/web-utils/Data.js","./node_modules/capacitor-data-storage-sqlite/dist/esm/web-utils/StorageDatabaseHelper.js","./node_modules/capacitor-data-storage-sqlite/dist/esm/web-utils/json-utils.js","./node_modules/capacitor-data-storage-sqlite/dist/esm/web.js"],"sourcesContent":["export class Data {\n}\n","//import LocalForage from 'jeep-localforage';\nimport localForage from 'localforage';\nimport { Data } from './Data';\n//const DATABASE: string = \"storageIDB\";\n//const STORAGESTORE: string = \"storage_store\";\nexport class StorageDatabaseHelper {\n    constructor(dbName, tableName) {\n        this._db = null;\n        const res = this.openStore(dbName, tableName);\n        if (res) {\n            this._dbName = dbName;\n            this._tableName = tableName;\n        }\n        else {\n            this._dbName = '';\n            this._tableName = '';\n            throw new Error('openStore return false');\n        }\n    }\n    openStore(dbName, tableName) {\n        let ret = false;\n        const config = this.setConfig(dbName, tableName);\n        this._db = localForage.createInstance(config);\n        if (this._db != null) {\n            this._dbName = dbName;\n            ret = true;\n        }\n        return ret;\n    }\n    setConfig(dbName, tableName) {\n        const config = {\n            name: dbName,\n            storeName: tableName,\n            driver: [localForage.INDEXEDDB, localForage.WEBSQL],\n            version: 1,\n        };\n        return config;\n    }\n    async setTable(tableName) {\n        const res = this.openStore(this._dbName, tableName);\n        if (res) {\n            return Promise.resolve();\n        }\n        else {\n            return Promise.reject(new Error('openStore return false'));\n        }\n    }\n    async isTable(table) {\n        if (this._db == null) {\n            return Promise.reject(`isTable: this.db is null`);\n        }\n        try {\n            let ret = false;\n            const tables = await this.tables();\n            if (tables.includes(table))\n                ret = true;\n            return Promise.resolve(ret);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    async tables() {\n        return new Promise((resolve, reject) => {\n            // Let us open our database\n            const DBOpenRequest = window.indexedDB.open(this._dbName);\n            // these two event handlers act on the database being opened successfully, or not\n            DBOpenRequest.onerror = () => {\n                return reject(`Error loading database ${this._dbName}`);\n            };\n            DBOpenRequest.onsuccess = () => {\n                let result = [];\n                const db = DBOpenRequest.result;\n                const retList = db.objectStoreNames;\n                const values = Object.values(retList);\n                for (const val of values) {\n                    if (val.substring(0, 12) != 'local-forage') {\n                        result = [...result, val];\n                    }\n                }\n                return resolve(result);\n            };\n        });\n    }\n    async set(data) {\n        try {\n            await this._db.setItem(data.name, data.value);\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    async get(name) {\n        try {\n            const value = await this._db.getItem(name);\n            const data = new Data();\n            data.name = name;\n            data.value = value;\n            return Promise.resolve(data);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    async remove(name) {\n        return this._db\n            .removeItem(name)\n            .then(() => {\n            return Promise.resolve();\n        })\n            .catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n    async clear() {\n        return this._db\n            .clear()\n            .then(() => {\n            return Promise.resolve();\n        })\n            .catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n    async keys() {\n        return this._db\n            .keys()\n            .then((keys) => {\n            return Promise.resolve(keys);\n        })\n            .catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n    async values() {\n        const values = [];\n        return this._db\n            .iterate((value) => {\n            values.push(value);\n        })\n            .then(() => {\n            return Promise.resolve(values);\n        })\n            .catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n    async keysvalues() {\n        const keysvalues = [];\n        return this._db\n            .iterate((value, key) => {\n            const data = new Data();\n            data.name = key;\n            data.value = value;\n            keysvalues.push(data);\n        })\n            .then(() => {\n            return Promise.resolve(keysvalues);\n        })\n            .catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n    async iskey(name) {\n        return this.get(name)\n            .then((data) => {\n            if (data.value != null) {\n                return Promise.resolve(true);\n            }\n            else {\n                return Promise.resolve(false);\n            }\n        })\n            .catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n    async importJson(values) {\n        let changes = 0;\n        for (const val of values) {\n            try {\n                const data = new Data();\n                data.name = val.key;\n                data.value = val.value;\n                await this.set(data);\n                changes += 1;\n            }\n            catch (err) {\n                return Promise.reject(err);\n            }\n        }\n        return Promise.resolve(changes);\n    }\n    async exportJson() {\n        const retJson = {};\n        const prevTableName = this._tableName;\n        try {\n            retJson.database = this._dbName.slice(0, -3);\n            retJson.encrypted = false;\n            retJson.tables = [];\n            // get the table list\n            const tables = await this.tables();\n            for (const table of tables) {\n                this._tableName = table;\n                const retTable = {};\n                retTable.name = table;\n                retTable.values = [];\n                const res = this.openStore(this._dbName, this._tableName);\n                if (res) {\n                    const dataTable = await this.keysvalues();\n                    for (const tdata of dataTable) {\n                        const retData = {};\n                        if (tdata.name != null) {\n                            retData.key = tdata.name;\n                            retData.value = tdata.value;\n                            retTable.values = [...retTable.values, retData];\n                        }\n                        else {\n                            return Promise.reject('Data.name is undefined');\n                        }\n                    }\n                    retJson.tables = [...retJson.tables, retTable];\n                }\n                else {\n                    const msg = `Could not open ${this._dbName} ${this._tableName} `;\n                    this._tableName = prevTableName;\n                    return Promise.reject(msg);\n                }\n            }\n            this._tableName = prevTableName;\n            const res = this.openStore(this._dbName, this._tableName);\n            if (res) {\n                return Promise.resolve(retJson);\n            }\n            else {\n                const msg = `Could not open ${this._dbName} ${this._tableName} `;\n                return Promise.reject(msg);\n            }\n        }\n        catch (err) {\n            this._tableName = prevTableName;\n            return Promise.reject(err);\n        }\n    }\n}\n","/**\n * IsJsonSQLite\n * @param obj\n */\nexport const isJsonStore = (obj) => {\n    const keyFirstLevel = ['database', 'encrypted', 'tables'];\n    if (obj == null || (Object.keys(obj).length === 0 && obj.constructor === Object))\n        return false;\n    for (const key of Object.keys(obj)) {\n        if (keyFirstLevel.indexOf(key) === -1)\n            return false;\n        if (key === 'database' && typeof obj[key] != 'string')\n            return false;\n        if (key === 'encrypted' && typeof obj[key] != 'boolean')\n            return false;\n        if (key === 'tables' && typeof obj[key] != 'object')\n            return false;\n        if (key === 'tables') {\n            for (const oKey of obj[key]) {\n                const retTable = isTable(oKey);\n                if (!retTable)\n                    return false;\n            }\n        }\n    }\n    return true;\n};\n/**\n * IsTable\n * @param obj\n */\nexport const isTable = (obj) => {\n    const keyTableLevel = ['name', 'values'];\n    if (obj == null || (Object.keys(obj).length === 0 && obj.constructor === Object)) {\n        return false;\n    }\n    for (const key of Object.keys(obj)) {\n        if (keyTableLevel.indexOf(key) === -1)\n            return false;\n        if (key === 'name' && typeof obj[key] != 'string')\n            return false;\n        if (key === 'values' && typeof obj[key] != 'object')\n            return false;\n        if (key === 'values') {\n            for (const oKey of obj[key]) {\n                const retValue = isValue(oKey);\n                if (!retValue)\n                    return false;\n            }\n        }\n    }\n    return true;\n};\n/**\n * IsValue\n * @param obj\n */\nexport const isValue = (obj) => {\n    const keyTableLevel = ['key', 'value'];\n    if (obj == null || (Object.keys(obj).length === 0 && obj.constructor === Object)) {\n        return false;\n    }\n    for (const key of Object.keys(obj)) {\n        if (keyTableLevel.indexOf(key) === -1)\n            return false;\n        if (key === 'key' && typeof obj[key] != 'string')\n            return false;\n        if (key === 'value' && typeof obj[key] != 'string')\n            return false;\n    }\n    return true;\n};\n","import { WebPlugin } from '@capacitor/core';\nimport { Data } from './web-utils/Data';\nimport { StorageDatabaseHelper } from './web-utils/StorageDatabaseHelper';\nimport { isJsonStore } from './web-utils/json-utils';\nexport class CapacitorDataStorageSqliteWeb extends WebPlugin {\n    async echo(options) {\n        const ret = {};\n        ret.value = options.value ? options.value : '';\n        return ret;\n    }\n    async openStore(options) {\n        const dbName = options.database ? `${options.database}IDB` : 'storageIDB';\n        const tableName = options.table ? options.table : 'storage_store';\n        try {\n            this.mDb = new StorageDatabaseHelper(dbName, tableName);\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(`OpenStore: ${err.message}`);\n        }\n    }\n    async closeStore(options) {\n        throw new Error(`Method closeStore not implemented. ${options}`);\n    }\n    async isStoreOpen(options) {\n        throw new Error(`Method isStoreOpen not implemented. ${options}`);\n    }\n    async isStoreExists(options) {\n        throw new Error(`Method isStoreExists not implemented. ${options}`);\n    }\n    async setTable(options) {\n        const tableName = options.table;\n        if (tableName == null) {\n            return Promise.reject('SetTable: Must provide a table name');\n        }\n        if (this.mDb) {\n            try {\n                await this.mDb.setTable(tableName);\n                return Promise.resolve();\n            }\n            catch (err) {\n                return Promise.reject(`SetTable: ${err.message}`);\n            }\n        }\n        else {\n            return Promise.reject('SetTable: Must open a store first');\n        }\n    }\n    async set(options) {\n        const key = options.key;\n        if (key == null || typeof key != 'string') {\n            return Promise.reject('Set: Must provide key as string');\n        }\n        const value = options.value ? options.value : null;\n        if (value == null || typeof value != 'string') {\n            return Promise.reject('Set: Must provide value as string');\n        }\n        const data = new Data();\n        data.name = key;\n        data.value = value;\n        try {\n            await this.mDb.set(data);\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(`Set: ${err.message}`);\n        }\n    }\n    async get(options) {\n        const key = options.key;\n        if (key == null || typeof key != 'string') {\n            return Promise.reject('Get: Must provide key as string');\n        }\n        try {\n            const data = await this.mDb.get(key);\n            if ((data === null || data === void 0 ? void 0 : data.value) != null) {\n                return Promise.resolve({ value: data.value });\n            }\n            else {\n                return Promise.resolve({ value: '' });\n            }\n        }\n        catch (err) {\n            return Promise.reject(`Get: ${err.message}`);\n        }\n    }\n    async remove(options) {\n        const key = options.key;\n        if (key == null || typeof key != 'string') {\n            return Promise.reject('Remove: Must provide key as string');\n        }\n        try {\n            await this.mDb.remove(key);\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(`Remove: ${err.message}`);\n        }\n    }\n    async clear() {\n        try {\n            await this.mDb.clear();\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(`Clear: ${err.message}`);\n        }\n    }\n    async iskey(options) {\n        const key = options.key;\n        if (key == null || typeof key != 'string') {\n            return Promise.reject('Iskey: Must provide key as string');\n        }\n        try {\n            const ret = await this.mDb.iskey(key);\n            return Promise.resolve({ result: ret });\n        }\n        catch (err) {\n            return Promise.reject(`Iskey: ${err.message}`);\n        }\n    }\n    async keys() {\n        try {\n            const ret = await this.mDb.keys();\n            return Promise.resolve({ keys: ret });\n        }\n        catch (err) {\n            return Promise.reject(`Keys: ${err.message}`);\n        }\n    }\n    async values() {\n        try {\n            const ret = await this.mDb.values();\n            return Promise.resolve({ values: ret });\n        }\n        catch (err) {\n            return Promise.reject(`Values: ${err.message}`);\n        }\n    }\n    async filtervalues(options) {\n        const filter = options.filter;\n        if (filter == null || typeof filter != 'string') {\n            return Promise.reject('Filtervalues: Must provide filter as string');\n        }\n        let regFilter;\n        if (filter.startsWith('%')) {\n            regFilter = new RegExp('^' + filter.substring(1), 'i');\n        }\n        else if (filter.endsWith('%')) {\n            regFilter = new RegExp(filter.slice(0, -1) + '$', 'i');\n        }\n        else {\n            regFilter = new RegExp(filter, 'i');\n        }\n        try {\n            const ret = [];\n            const results = await this.mDb.keysvalues();\n            for (const result of results) {\n                if (result.name != null && regFilter.test(result.name)) {\n                    if (result.value != null) {\n                        ret.push(result.value);\n                    }\n                    else {\n                        return Promise.reject(`Filtervalues: result.value is null`);\n                    }\n                }\n            }\n            return Promise.resolve({ values: ret });\n        }\n        catch (err) {\n            return Promise.reject(`Filtervalues: ${err.message}`);\n        }\n    }\n    async keysvalues() {\n        try {\n            const ret = [];\n            const results = await this.mDb.keysvalues();\n            for (const result of results) {\n                if (result.name != null && result.value != null) {\n                    const res = { key: result.name, value: result.value };\n                    ret.push(res);\n                }\n                else {\n                    return Promise.reject(`Keysvalues: result.name/value are null`);\n                }\n            }\n            return Promise.resolve({ keysvalues: ret });\n        }\n        catch (err) {\n            return Promise.reject(`Keysvalues: ${err.message}`);\n        }\n    }\n    async deleteStore(options) {\n        throw new Error(`Method deleteStore not implemented. ${options}`);\n    }\n    async isTable(options) {\n        const table = options.table;\n        if (table == null) {\n            return Promise.reject('Must provide a Table Name');\n        }\n        try {\n            const ret = await this.mDb.isTable(table);\n            return Promise.resolve({ result: ret });\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    async tables() {\n        try {\n            const ret = await this.mDb.tables();\n            return Promise.resolve({ tables: ret });\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    async deleteTable(options) {\n        throw new Error(`Method deleteTable not implemented. ${options}`);\n    }\n    async importFromJson(options) {\n        const keys = Object.keys(options);\n        if (!keys.includes('jsonstring')) {\n            return Promise.reject('Must provide a json object');\n        }\n        let totalChanges = 0;\n        if (options === null || options === void 0 ? void 0 : options.jsonstring) {\n            const jsonStrObj = options.jsonstring;\n            const jsonObj = JSON.parse(jsonStrObj);\n            const isValid = isJsonStore(jsonObj);\n            if (!isValid) {\n                return Promise.reject('Must provide a valid JsonSQLite Object');\n            }\n            const vJsonObj = jsonObj;\n            const dbName = vJsonObj.database ? `${vJsonObj.database}IDB` : 'storageIDB';\n            for (const table of vJsonObj.tables) {\n                const tableName = table.name ? table.name : 'storage_store';\n                try {\n                    this.mDb = new StorageDatabaseHelper(dbName, tableName);\n                    // Open the database\n                    const bRet = this.mDb.openStore(dbName, tableName);\n                    if (bRet) {\n                        // Import the JsonSQLite Object\n                        if (table === null || table === void 0 ? void 0 : table.values) {\n                            const changes = await this.mDb.importJson(table.values);\n                            totalChanges += changes;\n                        }\n                    }\n                    else {\n                        return Promise.reject(`Open store: ${dbName} : table: ${tableName} failed`);\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(`ImportFromJson: ${err.message}`);\n                }\n            }\n            return Promise.resolve({ changes: totalChanges });\n        }\n        else {\n            return Promise.reject('Must provide a json object');\n        }\n    }\n    async isJsonValid(options) {\n        const keys = Object.keys(options);\n        if (!keys.includes('jsonstring')) {\n            return Promise.reject('Must provide a json object');\n        }\n        if (options === null || options === void 0 ? void 0 : options.jsonstring) {\n            const jsonStrObj = options.jsonstring;\n            const jsonObj = JSON.parse(jsonStrObj);\n            const isValid = isJsonStore(jsonObj);\n            if (!isValid) {\n                return Promise.reject('Stringify Json Object not Valid');\n            }\n            else {\n                return Promise.resolve({ result: true });\n            }\n        }\n        else {\n            return Promise.reject('Must provide in options a stringify Json Object');\n        }\n    }\n    async exportToJson() {\n        try {\n            const ret = await this.mDb.exportJson();\n            return Promise.resolve({ export: ret });\n        }\n        catch (err) {\n            return Promise.reject(`exportToJson: ${err}`);\n        }\n    }\n}\n"],"names":["Data","localForage","StorageDatabaseHelper","constructor","dbName","tableName","_db","res","openStore","_dbName","_tableName","Error","ret","config","setConfig","createInstance","name","storeName","driver","INDEXEDDB","WEBSQL","version","setTable","Promise","resolve","reject","isTable","table","tables","includes","err","DBOpenRequest","window","indexedDB","open","onerror","onsuccess","result","db","retList","objectStoreNames","values","Object","val","substring","set","data","setItem","value","get","getItem","remove","removeItem","then","catch","error","clear","keys","iterate","push","keysvalues","key","iskey","importJson","changes","exportJson","retJson","prevTableName","database","slice","encrypted","retTable","dataTable","tdata","retData","msg","isJsonStore","obj","keyFirstLevel","length","indexOf","oKey","keyTableLevel","retValue","isValue","WebPlugin","CapacitorDataStorageSqliteWeb","echo","options","mDb","message","closeStore","isStoreOpen","isStoreExists","filtervalues","filter","regFilter","startsWith","RegExp","endsWith","results","test","deleteStore","deleteTable","importFromJson","totalChanges","jsonstring","jsonStrObj","jsonObj","JSON","parse","isValid","vJsonObj","bRet","isJsonValid","exportToJson","export"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}