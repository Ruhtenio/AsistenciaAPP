{"version":3,"file":"node_modules_capacitor-community_sqlite_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-community/sqlite/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class CapacitorSQLiteWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.jeepSqliteElement = null;\n        this.isWebStoreOpen = false;\n    }\n    async initWebStore() {\n        await customElements.whenDefined('jeep-sqlite');\n        this.jeepSqliteElement = document.querySelector('jeep-sqlite');\n        this.ensureJeepSqliteIsAvailable();\n        this.jeepSqliteElement.addEventListener('jeepSqliteImportProgress', (event) => {\n            this.notifyListeners('sqliteImportProgressEvent', event.detail);\n        });\n        this.jeepSqliteElement.addEventListener('jeepSqliteExportProgress', (event) => {\n            this.notifyListeners('sqliteExportProgressEvent', event.detail);\n        });\n        if (!this.isWebStoreOpen) {\n            this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n        }\n        return;\n    }\n    async saveToStore(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.saveToStore(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async echo(options) {\n        this.ensureJeepSqliteIsAvailable();\n        const echoResult = await this.jeepSqliteElement.echo(options);\n        return echoResult;\n    }\n    async createConnection(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.createConnection(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async open(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.open(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async closeConnection(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.closeConnection(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getVersion(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const versionResult = await this.jeepSqliteElement.getVersion(options);\n            return versionResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async checkConnectionsConsistency(options) {\n        this.ensureJeepSqliteIsAvailable();\n        try {\n            console.log(`in web checkConnectionsConsistency: ${JSON.stringify(options)}`);\n            const consistencyResult = await this.jeepSqliteElement.checkConnectionsConsistency(options);\n            return consistencyResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async close(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.close(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getTableList(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const tableListResult = await this.jeepSqliteElement.getTableList(options);\n            return tableListResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async execute(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const executeResult = await this.jeepSqliteElement.execute(options);\n            return executeResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async executeSet(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const executeResult = await this.jeepSqliteElement.executeSet(options);\n            return executeResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async run(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const runResult = await this.jeepSqliteElement.run(options);\n            return runResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async query(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const queryResult = await this.jeepSqliteElement.query(options);\n            return queryResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDBExists(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const dbExistsResult = await this.jeepSqliteElement.isDBExists(options);\n            return dbExistsResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDBOpen(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isDBOpenResult = await this.jeepSqliteElement.isDBOpen(options);\n            return isDBOpenResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDatabase(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isDatabaseResult = await this.jeepSqliteElement.isDatabase(options);\n            return isDatabaseResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isTableExists(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const tableExistsResult = await this.jeepSqliteElement.isTableExists(options);\n            return tableExistsResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async deleteDatabase(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.deleteDatabase(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isJsonValid(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isJsonValidResult = await this.jeepSqliteElement.isJsonValid(options);\n            return isJsonValidResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async importFromJson(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const importFromJsonResult = await this.jeepSqliteElement.importFromJson(options);\n            return importFromJsonResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async exportToJson(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const exportToJsonResult = await this.jeepSqliteElement.exportToJson(options);\n            return exportToJsonResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async createSyncTable(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const createSyncTableResult = await this.jeepSqliteElement.createSyncTable(options);\n            return createSyncTableResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async setSyncDate(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.setSyncDate(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getSyncDate(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const getSyncDateResult = await this.jeepSqliteElement.getSyncDate(options);\n            return getSyncDateResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async deleteExportedRows(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.deleteExportedRows(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async addUpgradeStatement(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.addUpgradeStatement(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async copyFromAssets(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.copyFromAssets(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getFromHTTPRequest(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.getFromHTTPRequest(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getDatabaseList() {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const databaseListResult = await this.jeepSqliteElement.getDatabaseList();\n            return databaseListResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    /**\n     * Checks if the `jeep-sqlite` element is present in the DOM.\n     * If it's not in the DOM, this method throws an Error.\n     *\n     * Attention: This will always fail, if the `intWebStore()` method wasn't called before.\n     */\n    ensureJeepSqliteIsAvailable() {\n        if (this.jeepSqliteElement === null) {\n            throw new Error(`The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.`);\n        }\n    }\n    ensureWebstoreIsOpen() {\n        if (!this.isWebStoreOpen) {\n            /**\n             * if (!this.isWebStoreOpen)\n              this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n             */\n            throw new Error('WebStore is not open yet. You have to call \"initWebStore()\" first.');\n        }\n    }\n    ////////////////////////////////////\n    ////// UNIMPLEMENTED METHODS\n    ////////////////////////////////////\n    async getUrl() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getMigratableDbList(options) {\n        console.log('getMigratableDbList', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async addSQLiteSuffix(options) {\n        console.log('addSQLiteSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteOldDatabases(options) {\n        console.log('deleteOldDatabases', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async moveDatabasesAndAddSuffix(options) {\n        console.log('moveDatabasesAndAddSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isSecretStored() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async setEncryptionSecret(options) {\n        console.log('setEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async changeEncryptionSecret(options) {\n        console.log('changeEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async clearEncryptionSecret() {\n        console.log('clearEncryptionSecret');\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getNCDatabasePath(options) {\n        console.log('getNCDatabasePath', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async createNCConnection(options) {\n        console.log('createNCConnection', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async closeNCConnection(options) {\n        console.log('closeNCConnection', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isNCDatabase(options) {\n        console.log('isNCDatabase', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n"],"names":["WebPlugin","CapacitorSQLiteWeb","constructor","arguments","jeepSqliteElement","isWebStoreOpen","initWebStore","customElements","whenDefined","document","querySelector","ensureJeepSqliteIsAvailable","addEventListener","event","notifyListeners","detail","isStoreOpen","saveToStore","options","ensureWebstoreIsOpen","err","Error","echo","echoResult","createConnection","open","closeConnection","getVersion","versionResult","checkConnectionsConsistency","console","log","JSON","stringify","consistencyResult","close","getTableList","tableListResult","execute","executeResult","executeSet","run","runResult","query","queryResult","isDBExists","dbExistsResult","isDBOpen","isDBOpenResult","isDatabase","isDatabaseResult","isTableExists","tableExistsResult","deleteDatabase","isJsonValid","isJsonValidResult","importFromJson","importFromJsonResult","exportToJson","exportToJsonResult","createSyncTable","createSyncTableResult","setSyncDate","getSyncDate","getSyncDateResult","deleteExportedRows","addUpgradeStatement","copyFromAssets","getFromHTTPRequest","getDatabaseList","databaseListResult","getUrl","unimplemented","getMigratableDbList","addSQLiteSuffix","deleteOldDatabases","moveDatabasesAndAddSuffix","isSecretStored","setEncryptionSecret","changeEncryptionSecret","clearEncryptionSecret","getNCDatabasePath","createNCConnection","closeNCConnection","isNCDatabase"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}