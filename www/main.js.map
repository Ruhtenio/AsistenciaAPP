{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/model/Message.ts","./src/app/model/MessageEnum.ts","./src/app/model/Usuario.ts","./src/app/services/auth-guard.service.ts","./src/app/services/authentication.service.ts","./src/app/services/database.service.ts","./src/app/services/login-guard.service.ts","./src/app/services/sqlite.service.ts","./src/app/services/storage.service.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { AuthGuardService } from './services/auth-guard.service';\nimport { LoginGuardService } from './services/login-guard.service';\nimport { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes, CanActivate } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./pages/home/home.module').then( m => m.HomePageModule),\n    canActivate:[AuthGuardService]\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./pages/login/login.module').then( m => m.LoginPageModule),\n    canActivate:[LoginGuardService]\n  },\n  /*{\n    path: '**',\n    loadChildren: () => import('./pages/page-not-found/page-not-found-routing.module').then( m => m.PageNotFoundPageRoutingModule)\n  },\n  {\n    path: 'page-not-found',\n    loadChildren: () => import('./pages/page-not-found/page-not-found.module').then( m => m.PageNotFoundPageModule)\n  },*/\n  {\n    path: 'correo',\n    loadChildren: () => import('./pages/correo/correo.module').then( m => m.CorreoPageModule)\n  },\n  {\n    path: 'pregunta',\n    loadChildren: () => import('./pages/pregunta/pregunta.module').then( m => m.PreguntaPageModule)\n  },\n  {\n    path: 'correo',\n    loadChildren: () => import('./pages/correo/correo.module').then( m => m.CorreoPageModule)\n  },\n  {\n    path: 'incorrecto',\n    loadChildren: () => import('./pages/incorrecto/incorrecto.module').then( m => m.IncorrectoPageModule)\n  },\n  {\n    path: 'correcto',\n    loadChildren: () => import('./pages/correcto/correcto.module').then( m => m.CorrectoPageModule)\n  },\n  {\n    path: 'eliminar-usuario',\n    loadChildren: () => import('./pages/eliminar-usuario/eliminar-usuario.module').then( m => m.EliminarUsuarioPageModule)\n  },\n  {\n    path: 'crear-usuario',\n    loadChildren: () => import('./pages/crear-usuario/crear-usuario.module').then( m => m.CrearUsuarioPageModule)\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform } from '@ionic/angular';\nimport { log } from './model/Message';\nimport { AuthService } from './services/authentication.service';\nimport { DatabaseService } from './services/database.service';\nimport { StorageService } from './services/storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private db: DatabaseService,\n    private auth: AuthService,\n    private router: Router,\n    private storage: StorageService)\n  {\n    this.StartApp();\n  }\n\n  async StartApp() {\n\n    log('StartApp', 'Iniciando aplicación');\n    \n    this.platform.ready().then(async () => {\n\n      log('StartApp', 'Plataforma lista');\n\n      await this.db.StartDatabaseService(true).then(async (isRunning) => {\n\n        log('StartApp', isRunning? 'Servicio de BD iniciado': 'Servicio de BD no iniciado');\n\n      });\n    })\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { IonicStorageModule } from '@ionic/storage-angular';\nimport { StorageService } from './services/storage.service';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthService } from './services/authentication.service';\nimport { SQLiteService } from './services/sqlite.service';\nimport { DatabaseService } from './services/database.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    IonicStorageModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [  \n    DatabaseService,\n    StorageService,\n    SQLiteService,\n    AuthService,\n    AuthGuardService,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { AlertController, ToastController } from \"@ionic/angular\";\nimport { MessageEnum } from \"./MessageEnum\";\n\nvar showLogs: boolean = true;\n\nexport function log(source: string, message: string, returnValue?: boolean) {\n    if (showLogs) {\n        const red = 'color: red;';\n        const green = 'color: dark green;';\n        const blue = 'color: blue;';\n        const black = 'color: blue;';\n        const yellow = 'background-color: yellow;';\n        const cyan = 'background-color: cyan;';\n        const magenta = 'background-color: magenta;';\n        let color1 = 'color: gray';\n        let color2 = 'color: gray';\n\n        if (source === 'StartSQLiteService') { color1 = yellow; color2 = black;}\n        if (source === 'StorageService')     { color1 = red;    color2 = black;}\n        if (source === 'isLogged')           { color1 = blue;   color2 = black;}\n        if (source === 'isAuthenticated')    { color1 = green;  color2 = black;}\n        if (source === 'LoginGuardService')  { color1 = cyan;   color2 = black;}\n        if (source === 'AuthGuardService')   { color1 = magenta;   color2 = black;}\n\n        console.log(`%c${source}:%c ${message}`, color1, color2);\n    }\n    if (returnValue) return returnValue;\n}\n\nexport async function showToast(message:string, duration?: number): Promise<void> {\n    const controler = new ToastController();\n    const toast = await controler.create({ message:message, duration: duration?duration:2000 });\n    toast.present();\n}\n\nexport async function showAlert(header: string, message: string): Promise<void> {\n    return new Promise((resolve) => {\n        let alert = new AlertController().create({\n            header, message, cssClass: 'custom-alert', buttons: [{ text: 'Aceptar', handler: () => resolve() }]\n        }).then((value: HTMLIonAlertElement) => value.present());\n    });\n}\n\nexport async function showAlertYesNo(header: string, message: string): Promise<MessageEnum> {\n    return new Promise((resolve) => {\n        let alert = new AlertController().create({\n            header, message, \n            buttons: [\n                { text: 'Sí', handler: () => { resolve(MessageEnum.YES); } },\n                { text: 'No', handler: () => { resolve(MessageEnum.NO) } },\n                { text: 'Cancelar', handler: () => { resolve(MessageEnum.CANCEL) } },\n            ]\n        }).then((value: HTMLIonAlertElement) => value.present());\n    });\n}\n\nexport async function showAlertDUOC(message: string): Promise<void> {\n    return new Promise((resolve) => {\n        if (message.trim() === '') resolve();\n        let alert = new AlertController().create({\n            header: 'App Estoy Presente', message, \n            buttons: [\n                { text: 'Aceptar', handler: () => resolve() }\n            ]\n        }).then((value: HTMLIonAlertElement) => value.present());\n    });\n}\n\nexport async function showAlertYesNoDUOC(message: string): Promise<MessageEnum> {\n    return new Promise((resolve) => {\n        if (message.trim() === '') resolve(MessageEnum.CANCEL);\n        let alert = new AlertController().create({\n            header: 'App Estoy Presente', message, \n            buttons: [\n                { text: 'Sí', handler: () => { resolve(MessageEnum.YES); } },\n                { text: 'No', handler: () => { resolve(MessageEnum.NO) } },\n                { text: 'Cancelar', handler: () => { resolve(MessageEnum.CANCEL) } },\n            ]\n        }).then((value: HTMLIonAlertElement) => value.present());\n    });\n}\n\nexport async function showAlertError(source: string, err: Error): Promise<void> {\n    return new Promise((resolve) => {\n        const erroMessage = `Error en ${source}. ${err.message}. ` +\n            `Comuníquese con el Administrador del Sistema o intente nuevamente más tarde.`;\n        if (showLogs) console.log(erroMessage);\n        let alert = new AlertController().create({\n            header: 'Error del Sistema', message: erroMessage, \n            buttons: [\n                { text: 'Aceptar', handler: () => resolve() }\n            ]\n        }).then((value: HTMLIonAlertElement) => value.present());\n    });\n}\n\nexport async function mostrarEjemplosDeMensajes() {\n    await showToast('Este es un mensaje toast');\n    await showAlertDUOC('Este es un mensaje alert');\n    let response = await showAlertYesNoDUOC('Este es un mensaje de prueba de la función \"showAlertYesNoDUOC\" ' +\n        'que permite escoger entre las alternativas: Sí, No y Cancelar. Escoja una opción.');\n    if (response == MessageEnum.YES) await showAlertDUOC('El usuario ha contestado Yes');\n    if (response == MessageEnum.NO) await showAlertDUOC('El usuario ha contestado No');\n    if (response == MessageEnum.CANCEL) await showAlertDUOC('El usuario ha contestado Cancel');\n}","export enum MessageEnum {\n    OK = 0,\n    YES = 1,\n    NO = 2,\n    CANCEL = 3\n}","import { DatabaseService } from \"../services/database.service\";\nimport { SQLiteService } from \"../services/sqlite.service\";\nimport { showAlertDUOC } from \"./Message\";\n\nexport class Usuario {\n\n    public correo = '';\n    public password = '';\n    public nombre = '';\n    public preguntaSecreta = '';\n    public respuestaSecreta = '';\n    public sesionActiva = '';\n\n    constructor() { }\n\n    setUser(correo: string,\n        password: string,\n        nombre: string,\n        preguntaSecreta: string,\n        respuestaSecreta: string,\n        sesionActiva: string,\n        hideSecrets: boolean)\n    {\n        this.correo = correo;\n        this.nombre = nombre;\n        this.sesionActiva = sesionActiva;\n        if (hideSecrets) {\n          this.password = '';\n          this.preguntaSecreta = '';\n          this.respuestaSecreta = '';\n        \n        } else {\n          this.password = password;\n          this.preguntaSecreta = preguntaSecreta;\n          this.respuestaSecreta = respuestaSecreta;\n        }\n    }\n\n    validateEmail(correo: string): string {\n      if (correo.trim() === '') return 'Para ingresar al sistema debe ingresar el correo del usuario.';\n      return '';\n    }\n  \n    validatePassword(password: string): string {\n      if (password.trim() === '') return 'Para entrar al sistema debe ingresar la contraseña.';\n      return '';\n    }  \n    validateName(nombre: string): string {\n      if (nombre.trim() === '') return 'Debe ingresar su nombre.';\n      return '';\n    }\n\n    validateSecretQuestion(question: string): string {\n      if (question.trim() === '') return 'Debe ingresar su pregunta secreta.';\n      return '';\n    }\n\n    validateSecretAnswer(answer: string): string {\n      if (answer.trim() === '') return 'Debe ingresar su respuesta secreta.';\n      return '';\n    }\n\n    async validateUser(correo: string, password: string, db: DatabaseService): Promise<boolean> {\n      return new Promise(async (resolve) => {\n        let msg = this.validateEmail(correo);\n        if (msg) {\n          await showAlertDUOC(msg);\n          return Promise.resolve(false);\n        }\n        msg = this.validatePassword(password);\n        if (msg) {\n          await showAlertDUOC(msg);\n          return Promise.resolve(false);\n        }\n        const usu = await db.readUser(correo, password, true);\n        if (usu === null) {\n          await showAlertDUOC('El correo o la contraseña no son correctos');\n          return Promise.resolve(null);\n        }\n        this.correo = usu.correo;\n        this.nombre = usu.nombre;\n        this.sesionActiva = usu.sesionActiva;\n        this.password = usu.password;\n        this.preguntaSecreta = usu.preguntaSecreta;\n        this.respuestaSecreta = usu.respuestaSecreta;\n        return Promise.resolve(usu);\n      });\n    }\n    \n    validarCamposUsuario(correo: string, password: string, name: string\n      , secretQuestion: string, secretAnswer: string): string {\n    return this.validateEmail(correo) \n      || this.validatePassword(password)\n      || this.validateName(name)\n      || this.validateSecretQuestion(secretQuestion)\n      || this.validateSecretAnswer(secretAnswer)\n  }\n  }\n  ","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { log } from '../model/Message';\nimport { AuthService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) { }\n  \n  async canActivate(): Promise<boolean | UrlTree>  {\n\n    log('AuthGuardService', 'Ejecutando guardián');\n    \n    const autenticado = await this.auth.isAuthenticated();\n\n    log('AuthGuardService', autenticado? 'Usuario autenticado quedarse en HomePage': 'Usuario no autenticado navegar a LoginPage');\n    \n    return autenticado? true: this.router.parseUrl('/login');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { capSQLiteChanges } from '@capacitor-community/sqlite';\nimport { capValueResult } from 'capacitor-data-storage-sqlite';\nimport { BehaviorSubject } from 'rxjs';\nimport { log, showAlertError, showToast } from '../model/Message';\nimport { Usuario } from '../model/Usuario';\nimport { DatabaseService } from './database.service';\nimport { StorageService } from './storage.service';\n\n@Injectable()\n\nexport class AuthService {\n\n    authState = new BehaviorSubject(false);\n    loginState = new BehaviorSubject(false);\n\n\n    constructor(\n        private router: Router,\n        private storage: StorageService,\n        private db: DatabaseService) \n    { \n        \n    }\n\n    async StartAuthService(): Promise<boolean> {\n        return await this.storage.StartStorageService('StartAuthenticationService');\n    }\n\n    async isLogged(): Promise<boolean> {\n        log('isLogged', 'Revisar si el usuario inició sesión')\n        return await this.storage.authUserExists().then(autenticado => {\n            log('isLogged', autenticado? 'El usuario ha iniciado sesión': 'El usuario no ha iniciado sesión');\n            if (autenticado) {\n                this.authState.next(true);\n            }\n            return true;\n        });\n    }\n\n    isAuthenticated(): Promise<boolean> {\n        log('isAuthenticated', 'Iniciar servicio de autenticación')\n        this.StartAuthService();\n        log('isAuthenticated', 'Revisar si el usuario inició sesión')\n        return this.storage.authUserExists().then(autenticado => {\n            log('isAuthenticated', autenticado? 'El usuario ha iniciado sesión': 'El usuario no ha iniciado sesión');\n            return autenticado;\n        });\n    }\n\n    async login(correo: string, password: string) {\n        console.log('Iniciando login');\n        try {\n            await this.StartAuthService();\n            log('login', `Obteniendo datos del usuario`);\n            const data: capValueResult = await this.storage.getItem(\"USER_DATA\");\n\n            if (data !== null) {\n                if (data.value !== '') {\n                    const usu = JSON.parse(data.value);\n                    console.log(`USUARIO ${usu.nombre} HA INICIADO SESION (isLogged)`);\n                    this.authState.next(true);\n                    this.router.navigate(['home']);\n                    return;\n                }\n            }\n\n\n            const usu = new Usuario();\n            usu.validateUser(correo, password, this.db);\n            if (usu === null) {\n                console.log('AuthenticationService.login El usuario no fue autenticado');\n                return;\n            }\n            console.log('AuthenticationService.login El usuario fue autenticado');\n            const resp = await this.db.updateActiveSession(correo, 'S');\n            if (resp.changes.changes === 1) {\n                showToast(`¡Bienvenido(a) ${usu.nombre}!`);\n                await this.storage.setItem('USER_DATA', JSON.stringify(usu));\n                await this.db.logUsers();\n                this.authState.next(true);\n                this.router.navigate(['home']);\n            } else {\n                console.log(`No fue posible actualizar la sesión`);\n            }\n        } catch(err) {\n            await showAlertError('AuthenticationService.login', err);\n        }\n    }\n    //AKI\n    async logout() {\n        console.log('Iniciando logout');\n        try {\n            const data: capValueResult = await this.storage.getItem('USER_DATA');\n\n\n            if (data !== null) {\n                if (data.value !== '') {\n                    const usu = JSON.parse(data.value);\n                    const response: capSQLiteChanges = await this.db.updateActiveSession(usu.correo, 'N');\n                    if (response.changes.changes === 1) {\n                        showToast(`¡Hasta pronto ${usu.nombre}!`);\n                        await this.storage.removeItem('USER_DATA');\n                        await this.db.logUsers();\n                        this.router.navigate(['login']);\n                        this.authState.next(false);\n                    } else {\n                        console.log(`No fue posible actualizar la sesión`);\n                    }\n                }\n            }\n\n        } catch(err) {\n            await showAlertError('AuthenticationService.logout', err);\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { capSQLiteChanges, DBSQLiteValues} from '@capacitor-community/sqlite';\nimport { Usuario } from '../model/Usuario';\nimport { SQLiteService } from './sqlite.service';\n\n@Injectable()\n\nexport class DatabaseService {\n\n    createSchema: string = `\n        CREATE TABLE IF NOT EXISTS USUARIO (\n            correo TEXT PRIMARY KEY NOT NULL,\n            password TEXT NOT NULL,\n            nombre TEXT NOT NULL,\n            preguntaSecreta TEXT NOT NULL,\n            respuestaSecreta TEXT NOT NULL,\n            sesionActiva TEXT NOT NULL\n        );\n        \n        CREATE TABLE IF NOT EXISTS QR\n        (\n            idAsignatura TEXT PRIMARY KEY,\n            bloqueInicio TEXT NOT NULL,\n            bloqueTermino TEXT NOT NULL,\n            dia TEXT NOT NULL,\n            horaFin TEXT,\n            horaInicio TEXT NOT NULL,\n            nombreAsignatura TEXT NOT NULL,\n            nombreProfesor TEXT NOT NULL,\n            seccion TEXT NOT NULL,\n            sede TEXT NOT NULL\n        );\n\n        CREATE TABLE IF NOT EXISTS CERTIFICACION\n        (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT NOT NULL,\n            fecha TEXT NOT NULL,\n            vencimiento INTEGER NOT NULL,\n            fechaVencimiento TEXT\n        );\n    `;\n    sqlInsertUser = 'INSERT INTO Usuario (correo, password, nombre, preguntaSecreta, respuestaSecreta, sesionActiva) VALUES (?,?,?,?,?,?)';\n    sqlSelectUser = 'SELECT * FROM Usuario WHERE correo=? AND password=? LIMIT 1';\n    sqlSelectAllUsers = 'SELECT * FROM Usuario';\n    sqlUpdateActiveSesion = 'UPDATE Usuario SET sesionActiva=? WHERE correo=?';\n    sqlSelectActiveSession = `SELECT correo, sesionActiva FROM Usuario WHERE sesionActiva = 'S' LIMIT 1`;\n    sqlUpdateUser = `UPDATE USUARIO SET \n                password = ?, \n                nombre = ?, \n                preguntaSecreta = ?, \n                respuestaSecreta = ?, \n                sesionActiva = ?\n            WHERE \n                correo = ?`;\n    sqlDeleteUser = 'DELETE FROM USUARIO WHERE correo = ?';\n    sqlSelectUserMail = 'SELECT * FROM Usuario WHERE correo=? LIMIT 1';\n\n    constructor(private sqlite: SQLiteService) { }\n    \n    StartDatabaseService(createDatabaseFromScratch: boolean): Promise<boolean> {\n        return this.sqlite.StartSQLiteService(this.createSchema, createDatabaseFromScratch, 'StartDatabaseService');\n    }\n\n    async createUser(correo: string, password: string, nombre: string, preguntaSecreta: string, respuestaSecreta: string, sesionActiva: string): Promise<capSQLiteChanges> {\n        return await this.sqlite.run(this.sqlInsertUser, [correo, password, nombre, preguntaSecreta, respuestaSecreta, sesionActiva]);\n    }\n\n    async readUsers(): Promise<DBSQLiteValues> {\n        return await this.sqlite.query(this.sqlSelectAllUsers);\n    }\n\n    async readUser(correo: string, password: string, hideSecrets: boolean): Promise<Usuario> {\n        const rs = await this.sqlite.query(this.sqlSelectUser, [correo, password]);\n        if (rs.values.length === 0) return Promise.resolve(null);\n        const usu = new Usuario();\n        const r = rs.values[0];\n        usu.setUser(\n            r.correo, \n            r.password, \n            r.nombre, \n            r.preguntaSecreta, \n            r.respuestaSecreta, \n            r.sesionActiva, \n            hideSecrets\n        );\n        return Promise.resolve(usu);\n    }\n\n    async logUsers() {\n        const rs: DBSQLiteValues = await this.readUsers();\n        console.log(`Cantidad de usuarios: ${rs.values.length}`);\n        rs.values.forEach((value, index) => {\n            console.log(\n                `Usuario ${index}: ${value.correo}, ${value.password}, ` +\n                `${value.nombre}, ${value.preguntaSecreta}, ` +\n                `${value.respuestaSecreta}, ` +\n                `${value.sesionActiva}`\n            );\n        });\n    }\n\n    async readActiveSession(): Promise<DBSQLiteValues> {\n        return await this.sqlite.db.query(this.sqlSelectActiveSession, []);\n    }\n\n    async updateActiveSession(correo: string, sesionActiva: string): Promise<capSQLiteChanges> {\n        return await this.sqlite.run(this.sqlUpdateActiveSesion, [sesionActiva, correo]);\n    }\n    //akiii\n    async userList(hideSecrets: boolean): Promise<Usuario[]> {\n        const lista = [];\n        const rs = await this.readUsers();\n        rs.values.forEach((r, index) => {\n            let usu = new Usuario();\n            if (hideSecrets) {\n                r.password = '';\n                r.preguntaSecreta = '';\n                r.respuestaSecreta = '';\n            }\n            usu.setUser(\n                r.correo, \n                r.password, \n                r.nombre, \n                r.preguntaSecreta, \n                r.respuestaSecreta, \n                r.sesionActiva, \n                hideSecrets\n            );\n            lista.push(usu);\n        });\n        return lista;\n    }\n  \n    async updateUser(usuario: Usuario): Promise<capSQLiteChanges> {\n        return await this.sqlite.run(this.sqlUpdateUser, \n            [\n                usuario.password,\n                usuario.nombre,\n                usuario.preguntaSecreta,\n                usuario.respuestaSecreta,\n                usuario.sesionActiva,\n                usuario.correo\n            ]);\n    }\n\n    async deleteUser(correo: string): Promise<capSQLiteChanges> {\n        return await this.sqlite.run(this.sqlDeleteUser, [correo]);\n    }\n    async buscarCorreo(correo: string): Promise<any> {\n        const { values } = await this.sqlite.query(this.sqlSelectUserMail, [correo]);\n        return values;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { log } from '../model/Message';\nimport { AuthService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) { }\n  \n  async canActivate(): Promise<boolean | UrlTree> {\n    \n    log('LoginGuardService', 'Ejecutando guardián');\n    \n    const autenticado = await this.auth.isAuthenticated();\n\n    log('LoginGuardService', autenticado? 'Usuario autenticado navegar a HomePage': 'Usuario no autenticado quedarse en LoginPage');\n    \n    return autenticado? this.router.parseUrl('/home'): true;\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Capacitor } from '@capacitor/core';\nimport { \n    CapacitorSQLite, SQLiteDBConnection, SQLiteConnection, capSQLiteChanges, \n    CapacitorSQLitePlugin, capSQLiteOptions, DBSQLiteValues\n} from '@capacitor-community/sqlite';\nimport { log, showAlertError } from '../model/Message';\n\n@Injectable()\n\nexport class SQLiteService {\n    platform: string;\n    isNative: boolean = false;\n    capacitorSQLitePlugin: CapacitorSQLitePlugin;\n    sqlite: SQLiteConnection;\n    db: SQLiteDBConnection;\n    database: string;\n    encrypted: boolean = false;\n    mode: string;\n    version: number;\n    readonly: boolean;\n    dbOptions: capSQLiteOptions;\n    dbChanges: capSQLiteChanges;\n    changes: number;\n    isRunning: boolean;\n    sqlInsertUser = 'INSERT INTO Usuario (correo, password, nombre, preguntaSecreta, respuestaSecreta, sesionActiva) VALUES (?,?,?,?,?,?)';\n    sqlSelectAllUsers = 'SELECT * FROM Usuario';\n\n    constructor() { }\n    \n    async createUser(correo: string, password: string, nombre: string, preguntaSecreta: string, respuestaSecreta: string, sesionActiva: string): Promise<capSQLiteChanges> {\n        return await this.run(this.sqlInsertUser, [correo, password, nombre, preguntaSecreta, respuestaSecreta, sesionActiva]);\n    }\n\n    StartSQLiteService(createSchema: string, createDatabaseFromScratch: boolean, callee: string): Promise<boolean> {\n\n        this.database = 'asistencia';\n        this.encrypted = false;\n        this.mode = 'no-encryption';\n        this.version = 1;\n        this.readonly = false;\n        this.dbOptions = {database: this.database, readonly: this.readonly };\n\n        return new Promise(async resolve => {\n            try {\n                \n                log('StartSQLiteService', `Iniciar servicio desde ${callee}`);\n                log('StartSQLiteService', `db:${this.database} enc:${this.encrypted} mode:${this.mode} ver:${this.version} readonly:${this.readonly}`);\n                this.platform = Capacitor.getPlatform();\n                if(this.platform === 'ios' || this.platform === 'android') this.isNative = true;\n                this.capacitorSQLitePlugin = CapacitorSQLite;\n                await this.capacitorSQLitePlugin.closeConnection(this.dbOptions).catch((reason) => console.log(reason))\n                this.sqlite = new SQLiteConnection(this.capacitorSQLitePlugin);\n                this.db = await this.createConnection();\n                if (createDatabaseFromScratch) await this.deleteDatabase();\n                this.db.open();\n                if (createDatabaseFromScratch) {\n                    await this.db.execute(createSchema); //aki aki aki\n                    await this.createUser('atorres@duocuc.cl', '1234', 'Ana Torres Leiva', '¿Cuál es tu animal favorito?', 'gato', 'S');\n                    await this.createUser('jperez@duocuc.cl', '5678', 'Juan Pérez González', '¿Cuál es tu postre favorito?', 'panqueques', 'N');\n                    await this.createUser('cmujica@duocuc.cl', '0987', 'Carla Mujica Sáez', '¿Cuál es tu vehículo favorito?', 'moto', 'N');\n                }\n                const rs: DBSQLiteValues = await this.query(this.sqlSelectAllUsers);\n                log('StartSQLiteService', `Cantidad de usuarios: ${rs.values.length}`);\n                rs.values.forEach((value, index) => {\n                    log('StartSQLiteService', \n                        `Usuario ${index}: ${value.correo}, ${value.password}, ${value.sesionActiva}` \n                        + `${value.nombre}, ${value.preguntaSecreta}, ` \n                        + `${value.respuestaSecreta}, ` \n                        + `${value.sesionActiva}`\n                    );\n                });\n                this.isRunning = true;\n                log('StartSQLiteService', 'Servicio iniciado');\n                resolve(true);\n            } catch(err) {\n                log('StartSQLiteService', 'Servicio no pudo ser iniciado');\n                await showAlertError('StartSQLiteService', err);\n                this.isRunning = false;\n                resolve(false);\n            }\n        });\n    }\n\n    getChanges(): number {\n        return this.dbChanges.changes.changes;\n    }\n\n    async createConnection(): Promise<SQLiteDBConnection> {\n        return await this.sqlite.createConnection(this.database, this.encrypted, this.mode, this.version, this.readonly);\n    }\n\n    async closeConnection(): Promise<void> {\n        return await this.sqlite.closeConnection(this.database, this.readonly);\n    }\n\n    async deleteDatabase(): Promise<void> {\n        return this.capacitorSQLitePlugin.deleteDatabase(this.dbOptions);\n    }\n\n    async execute(query: string): Promise<capSQLiteChanges> {\n        this.dbChanges = await this.db.execute(query);\n        return this.dbChanges;\n    }\n\n    async run(query: string, parameters?: any[]): Promise<capSQLiteChanges> {\n        return await this.db.run(query, parameters);\n    }\n\n    async query(query: string, parameters?: any[]): Promise<DBSQLiteValues> {\n        return await this.db.query(query, parameters);\n    }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { \n  CapacitorDataStorageSqlite, CapacitorDataStorageSqlitePlugin, capDataStorageResult, capKeysResult,\n  capKeysValuesResult, capOpenStorageOptions, capTablesResult, capValueResult, capValuesResult\n} from 'capacitor-data-storage-sqlite';\nimport { log, showAlertError } from '../model/Message';\nimport { Usuario } from '../model/Usuario';\nimport { SQLiteService } from './sqlite.service';\nimport { Capacitor } from '@capacitor/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private storage: Storage;\n  platform: string;\n  isNative: boolean = false;\n  store: CapacitorDataStorageSqlitePlugin;\n  database: string;\n  encrypted: boolean = false;\n  mode: string;\n  table: string;\n  dbOptions: capOpenStorageOptions;\n  isRunning: boolean;\n    \n  constructor(private ionicStorage: Storage, private db: SQLiteService) {\n    this.init();\n  }\n  StartStorageService(callee: string): Promise<boolean> {\n\n    this.database = 'asistencia';\n    this.encrypted = false;\n    this.mode = 'no-encryption';\n    this.table = 'STORAGE_TABLE';\n    this.dbOptions = {database: this.database, table: this.table, encrypted: this.encrypted, mode: this.mode};\n    \n    return new Promise(async resolve => {\n      try {\n          log('StorageService', `Iniciar servicio desde ${callee}`);\n          log('StorageService', `db:${this.database} enc:${this.encrypted} mode:${this.mode} table:${this.table})`);\n          this.platform = Capacitor.getPlatform();\n          if(this.platform === 'ios' || this.platform === 'android') this.isNative = true;\n          this.store = CapacitorDataStorageSqlite;\n          await this.store.openStore(this.dbOptions);\n          this.isRunning = true;\n          log('StorageService', 'Servicio iniciado');\n          resolve(true);\n      } catch(err) {\n          log('StorageService', 'Servicio no pudo ser iniciado');\n          await showAlertError('StorageService.StartStorageService', err);\n          this.isRunning = false;\n          resolve(false);\n      }\n  });\n}\n\nprivate async getStorageUser(hideSecrets: boolean): Promise<Usuario> {\n  log('getStorageUser', 'Revisando USER_DATA');\n  return this.getItem(\"USER_DATA\").then((datos) => {\n      if (datos !== null) {\n          if (datos.value !== '') {\n              log('getStorageUser', `USER_DATA tiene datos: ${datos.value}`);\n              const json = JSON.parse(datos.value);\n              const usu = new Usuario();\n              usu.setUser(\n                  json.correo, \n                  json.password, \n                  json.nombre, \n                  json.preguntaSecreta, \n                  json.respuestaSecreta, \n                  json.sesionActiva, \n                  hideSecrets\n              );\n              return usu;\n          }\n      }\n      log('getStorageUser', `USER_DATA no tiene datos`);\n      return null;\n  }).catch(err => {\n      showAlertError('StorageService.getStorageUser', err);\n      return null;\n  })\n}\nasync getSecureAuthUser(): Promise<Usuario> {\n  return this.getStorageUser(true);\n}\n\nasync getUnsecureAuthUser(): Promise<Usuario> {\n  return this.getStorageUser(false);\n}\n\nasync authUserExists(): Promise<boolean> {\n  return this.getStorageUser(false).then(usuario => { return !!usuario; });\n}\n\nasync closeStore(): Promise<void> {\n  return await this.store.closeStore({ database: this.database });\n}\n\nasync isStoreOpen(): Promise<capDataStorageResult> {\n  return await this.store.isStoreOpen({ database: this.database });\n}\n\nasync isStoreExists(): Promise<capDataStorageResult> {\n  return await this.store.isStoreExists({ database: this.database });\n}\n\nasync setTable(): Promise<void> {\n  await this.store.setTable({ table: this.table });\n}\n\nasync setItem(key: string, value: string): Promise<void> {\n  return await this.store.set({ key, value });\n}\n\nasync getItem(key:string): Promise<capValueResult> {\n  return await this.store.get({ key });\n}\n\nasync isKey(key: string): Promise<capDataStorageResult> {\n  return await this.store.iskey({ key });\n}\n\nasync getAllKeys(): Promise<capKeysResult> {\n  return await this.store.keys();\n}\n\nasync getAllValues(): Promise<capValuesResult> {\n  return await this.store.values();\n}\n\nasync getFilterValues(filter: string): Promise<capValuesResult> {\n  return await this.store.filtervalues({ filter });\n}\n\nasync getAllKeysValues(): Promise<capKeysValuesResult> {\n  return await this.store.keysvalues();\n}\n\nasync removeItem(key: string): Promise<void> {\n  return await this.store.remove({ key });\n}\n\nasync clear(): Promise<void> {\n  return await this.store.clear();\n}\n\nasync deleteStore(): Promise<void> {\n  return await this.store.deleteStore(this.dbOptions);\n}\n\nasync isTable(): Promise<capDataStorageResult> {\n  return await this.store.isTable({ table: this.table });\n}\n\nasync getAllTables(): Promise<capTablesResult> {\n  return await this.store.tables();\n}\n\nasync deleteTable(): Promise<void> {\n  return await this.store.deleteTable({ table: this.table });\n}\n\n  async init() {\n    this.storage = await this.ionicStorage.create();\n  }\n\n  set(key: string, value: any) {\n    this.storage.set(key, value);\n  }\n\n  async get(key: string) {\n    return await this.storage.get(key);\n  }\n\n  async remove(key: string) {\n    return await this.storage.remove(key);\n  }\n\n  async saveQR(data: string) {\n    this.set('QR', data);\n  }\n\n  async getQR() {\n    return this.get('QR');\n  }\n\n  async clearDino() {\n    await this.storage.remove('DINO_DATA');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t79,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t5593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t3225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t6655,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t4856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t3059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t8308,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t4690,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4090,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t6214,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t9447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t7950,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-250f021a_js-node_modules_ionic_core_dist_esm_t-7df007\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t9689,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-250f021a_js-node_modules_ionic_core_dist_esm_t-7df007\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t8840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t9667,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t3288,\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t5473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t3634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t2855,\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t8737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t9632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t4446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t2275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t8050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t8994,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t3592,\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t5454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t2666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t5534,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t4902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t1938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8179,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t1624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t9989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t8902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t8395,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t6357,\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t8268,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t2875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 863;\nmodule.exports = webpackAsyncContext;"],"names":["Component","Router","Platform","log","AuthService","DatabaseService","StorageService","AppComponent","constructor","platform","db","auth","router","storage","StartApp","ready","then","StartDatabaseService","isRunning","selector","template","AlertController","ToastController","MessageEnum","showLogs","source","message","returnValue","red","green","blue","black","yellow","cyan","magenta","color1","color2","console","showToast","duration","controler","toast","create","present","showAlert","header","Promise","resolve","alert","cssClass","buttons","text","handler","value","showAlertYesNo","YES","NO","CANCEL","showAlertDUOC","trim","showAlertYesNoDUOC","showAlertError","err","erroMessage","mostrarEjemplosDeMensajes","response","Usuario","setUser","correo","password","nombre","preguntaSecreta","respuestaSecreta","sesionActiva","hideSecrets","validateEmail","validatePassword","validateName","validateSecretQuestion","question","validateSecretAnswer","answer","validateUser","msg","usu","readUser","validarCamposUsuario","name","secretQuestion","secretAnswer","Injectable","AuthGuardService","canActivate","autenticado","isAuthenticated","parseUrl","providedIn","BehaviorSubject","StartAuthService","StartStorageService","isLogged","authUserExists","authState","next","login","data","getItem","JSON","parse","navigate","resp","updateActiveSession","changes","setItem","stringify","logUsers","logout","removeItem","SQLiteService","sqlite","createDatabaseFromScratch","StartSQLiteService","createSchema","createUser","run","sqlInsertUser","readUsers","query","sqlSelectAllUsers","rs","sqlSelectUser","values","length","r","forEach","index","readActiveSession","sqlSelectActiveSession","sqlUpdateActiveSesion","userList","lista","push","updateUser","usuario","sqlUpdateUser","deleteUser","sqlDeleteUser","buscarCorreo","sqlSelectUserMail","LoginGuardService","Capacitor","CapacitorSQLite","SQLiteConnection","callee","database","encrypted","mode","version","readonly","dbOptions","getPlatform","isNative","capacitorSQLitePlugin","closeConnection","catch","reason","createConnection","deleteDatabase","open","execute","getChanges","dbChanges","parameters","Storage","CapacitorDataStorageSqlite","ionicStorage","init","table","store","openStore","getStorageUser","datos","json","getSecureAuthUser","getUnsecureAuthUser","closeStore","isStoreOpen","isStoreExists","setTable","key","set","get","isKey","iskey","getAllKeys","keys","getAllValues","getFilterValues","filter","filtervalues","getAllKeysValues","keysvalues","remove","clear","deleteStore","isTable","getAllTables","tables","deleteTable","saveQR","getQR","clearDino"],"sourceRoot":"webpack:///","x_google_ignoreList":[14]}