{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit, ElementRef, ViewChild  } from '@angular/core';\nimport { Animation, AnimationController} from '@ionic/angular';\n// Las clases Router y NavigationExtras son necesarias para que la página login le pase\n// el nombre de usuario a la página home\nimport { Router, NavigationExtras} from '@angular/router';\n// La clase ToastController sirve para mostrar mensajes emergente que duran un par de segundos\nimport { ToastController } from '@ionic/angular';\nimport { Usuario } from 'src/app/model/Usuario';\nimport { AuthService } from 'src/app/services/authentication.service';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { MessageEnum } from './../../model/MessageEnum';\nimport { log } from 'src/app/model/Message';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  @ViewChild('botonIngresar', { read: ElementRef, static: true}) botonIngresar: ElementRef;\n  /*\n    Se genera el modelo user con dos claves (key), las que se comportan como propiedades\n    de la clase LoginPage.\n    En Modelo MVC, la clase \"LoginPage\" viene siendo el \"Controlador\", encargado de administrar\n    la parte gráfica de la página web de login, por lo que trabaja coordinado con el\n    archivo login.page.html\n    Cada propiedad tiene su valor inicial y tiene su pareja de control HTML que es el <ion-input>\n    De este modo el TAG:\n    <ion-input type=\"text\" [(ngModel)]=\"login.Usuario\"></ion-input>\n    ya sabe que tiene que trabajar con el modelo de Angular a través de la\n    propiedad \"login.Usuario\".\n    Fijarse que si se le colocan valores iniciales a login.usuario y login.password,\n    estos aparecerán inmediatamente reflejados en la página login cuando esta\n    se abra por primera vez.\n  */\n\n  public usuario: Usuario;\n  correo: string = '';\n  password: string = '';\n  public user: Promise<boolean>;\n\n    constructor(private router: Router, private toastController: ToastController, private animationController: AnimationController,\n      private auth: AuthService, private db: DatabaseService) {\n        this.correo = 'atorres@duocuc.cl';\n        this.password = '1234';\n    }\n\n  public ngOnInit(): void {\n    this.botonIn();\n\n    /*\n      Las siguientes 3 líneas de código sirven para lo siguiente:\n        Caso 1: Si las comentas, la página quedará lista para ingresar el nombre de usuario y la password\n        Caso 2: Si dejas las instrucciones sin comentar, entonces entrará inmediatamente a la página home,\n          usando el usuario por defecto \"cgomezvega\" con la password \"123\". Lo anterior es muy útil\n          para el caso en que ya quedó lista la página de login y me interesa probar las otras páginas,\n          de este modo se saltará el login y no tendrás que estar digitando los datos todo el tiempo.\n    */\n    // this.usuario.correo = 'cgomez';\n    // this.usuario.password = '5678';\n    // this.ingresar();\n  }\n\n  public botonIn() {\n    const animation = this.animationController\n      .create()\n      .addElement(this.botonIngresar.nativeElement)\n      .duration(1500)\n      .iterations(Infinity)\n      .keyframes([\n        { offset: 0, boxShadow: \"0 0 0 0 rgba(44, 103, 255, 0.4)\" },\n        { offset: 0.7, boxShadow: \"0 0 0 10px rgba(44, 103, 255, 0)\" },\n        { offset: 1, boxShadow: \"0 0 0 0 rgba(44, 103, 255, 0)\" }\n      ]);\n  \n    animation.play();\n  }\n\n  async ingresar() {\n    this.auth.login(this.correo, this.password);\n  \n    //this.mostrarMensaje('¡Bienvenido!');\n\n    const navigationExtras: NavigationExtras = {\n      state: {\n        usuario: this.usuario\n      }\n    };\n    this.router.navigate(['/home'], navigationExtras); // Navegamos hacia el Home y enviamos la información extra\n  }\n\n\n  /**\n   * Muestra un toast al usuario\n   *\n   * @param mensaje Mensaje a presentar al usuario\n   * @param duracion Duración el toast, este es opcional\n   */\n  async mostrarMensaje(mensaje: string, duracion?: number) {\n    const toast = await this.toastController.create({\n        message: mensaje,\n        duration: duracion? duracion: 2000\n      });\n    toast.present();\n  }\n  public ingresarValidarCorreo(): void {\n    //this.auth.login(this.correo, this.password);\n    this.router.navigate(['/correo'])\n  }\n  async eliminar() {\n    log('LoginPage.eliminar', 'Navegar a página de eliminar usuarios');\n    this.router.navigate(['eliminar-usuario']);\n  }\n\n  registrar() {\n    log('LoginPage.registrar', 'Navegar a página crear usuario nuevo');\n    this.router.navigate(['crear-usuario']);\n  }\n}\n"],"names":["Component","ElementRef","ViewChild","AnimationController","Router","ToastController","AuthService","DatabaseService","log","LoginPage","constructor","router","toastController","animationController","auth","db","correo","password","ngOnInit","botonIn","animation","create","addElement","botonIngresar","nativeElement","duration","iterations","Infinity","keyframes","offset","boxShadow","play","ingresar","login","navigationExtras","state","usuario","navigate","mostrarMensaje","mensaje","duracion","toast","message","present","ingresarValidarCorreo","eliminar","registrar","args","read","static","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}